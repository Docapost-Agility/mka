{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mka.min.js","webpack:///webpack/bootstrap 71910a29f57bbf79ba04","webpack:///./src/js/main.js","webpack:///./src/js/rightClick.js","webpack:///./src/js/DragAndDrop.js","webpack:///./src/js/select.js","webpack:///./src/js/copyPaste.js","webpack:///./src/js/count.js","webpack:///./src/js/arrows.js","webpack:///./src/js/deleteShortcut.js","webpack:///./src/js/selectAllShortcut.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","default","_rightClick","rightClick","_DragAndDrop","dndHandler","_select","select","_copyPaste","copyPaste","_count","count","_arrows","arrows","_deleteShortcut","deleteShortcut","_selectAllShortcut","selectAllShortcut","mka","document","getElementById","Error","config","eltSelectableClass","eltSelectedClass","onDragItemClass","dragNdrop","lasso","dropFunction","ids","console","log","pasteFunction","items","deleteFunction","actions","selectables","selection","components","HTMLElement","mkaInit","clientConfig","keys","map","slice","getElementsByClassName","style","userSelect","push","publicFunctions","getContainer","elementIsSelected","elt","classList","contains","parentNode","getSelectableElement","getSelectablesElements","getLastSelectedInDom","last","Array","from","offsetTop","offsetLeft","getSelection","copy","updateSelection","newSelection","sameSelection","length","indexOf","remove","add","component","onSelectionUpdate","removeElements","elements","index","splice","removeChild","isMkaContainerFocused","target","id","focus","init","bindComponentsEvents","eventName","value","event","stop","mouseEventsList","mouseEventsTargets","window","body","keyEventsList","mouseEventTarget","mouseEventName","keyEventName","parentFunctions","removeMkaRcMenu","conf","bindContextMenu","windowEvents","onkeydown","code","which","preventDefault","onclick","addEventListener","selectableElement","contextMenu","newMenu","createElement","item","li","innerHTML","title","action","appendChild","newDiv","setAttribute","position","left","pageX","top","pageY","bindDropEvents","dropper","e","defaultConfig","dropableClass","isDragging","droppers","querySelectorAll","bindDragEvents","draggableTarget","draggable","mkaEvents","onmousedown","documentEvents","onmousemove","onmouseup","element","innerCode","wrapper","wrapperSize","scrollWidth","width","setWrapperStyle","dataTransfer","setDragImage","setData","outerHTML","wrapperChildren","children","childDistance","opacity","child","color","backgroundColor","border","padding","textAlign","span","height","lineHeight","right","zIndex","borderRadius","firstElementIndex","square","eltSelectingClass","isInLasso","canStartLasso","selecting","shiftKey","selectableElements","forEach","elementIsCrossingZone","elementIndex","downX","downY","upX","upY","orderCoordinate","ondblclick","delete","ctrlKey","isVisble","refreshLasso","endLasso","squareElt","display","refresh","y1","x1","x2","y2","isCrossingElt","selectLassoItems","mkaElts","rect","getBoundingClientRect","zoneElt","copyElts","active","onkeyup","currentFocus","lastInDom","prev","next","scrollX","offsetWidth","innerWidth","scrollY","offsetHeight","innerHeight","scrollBy"],"mappings":"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","file":"mka.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mka\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mka\"] = factory();\n\telse\n\t\troot[\"mka\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mka\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mka\"] = factory();\n\telse\n\t\troot[\"mka\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _rightClick = __webpack_require__(1);\n\nvar rightClick = _interopRequireWildcard(_rightClick);\n\nvar _DragAndDrop = __webpack_require__(2);\n\nvar dndHandler = _interopRequireWildcard(_DragAndDrop);\n\nvar _select = __webpack_require__(3);\n\nvar select = _interopRequireWildcard(_select);\n\nvar _copyPaste = __webpack_require__(4);\n\nvar copyPaste = _interopRequireWildcard(_copyPaste);\n\nvar _count = __webpack_require__(5);\n\nvar count = _interopRequireWildcard(_count);\n\nvar _arrows = __webpack_require__(6);\n\nvar arrows = _interopRequireWildcard(_arrows);\n\nvar _deleteShortcut = __webpack_require__(7);\n\nvar deleteShortcut = _interopRequireWildcard(_deleteShortcut);\n\nvar _selectAllShortcut = __webpack_require__(8);\n\nvar selectAllShortcut = _interopRequireWildcard(_selectAllShortcut);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// principal elt\nvar mka = document.getElementById(\"mka\");\nif (!mka) throw new Error('mka id not found');\n\nvar config = {\n    \"eltSelectableClass\": \"mka-elt\",\n    \"eltSelectedClass\": \"mka-elt-selected\",\n    \"onDragItemClass\": null,\n    \"dragNdrop\": true,\n    \"rightClick\": false,\n    \"lasso\": true,\n    \"selectAllShortcut\": true,\n    \"copyPaste\": true,\n    \"arrows\": true,\n    \"deleteShortcut\": true,\n    \"count\": \"\",\n    \"dropFunction\": function dropFunction(ids) {\n        console.log(ids);\n        console.log(\"Default drop function, think to implement this function\");\n    },\n    \"pasteFunction\": function pasteFunction(items) {\n        console.log(items);\n        console.log(\"Default past function, think to implement this function\");\n    },\n    \"deleteFunction\": function deleteFunction(items) {\n        console.log(items);\n        console.log(\"Default delete function, think to implement this function\");\n    }\n};\n\nconfig.actions = [];\n\nvar selectables = [];\nvar selection = [];\nvar components = [];\n\nHTMLElement.prototype.mkaInit = function (clientConfig) {\n    Object.keys(clientConfig).map(function (i) {\n        config[i] = clientConfig[i];\n    });\n\n    selectables = [].slice.call(document.getElementsByClassName(config.eltSelectableClass));\n\n    // on désactive la selection de text\n    mka.style.userSelect = \"none\";\n\n    if (!!config.rightClick) {\n        components.push(rightClick);\n    }\n\n    if (config.dragNdrop) {\n        components.push(dndHandler);\n    }\n\n    if (config.selectAllShortcut) {\n        components.push(selectAllShortcut);\n    }\n\n    if (config.copyPaste) {\n        components.push(copyPaste);\n    }\n\n    if (config.deleteShortcut) {\n        components.push(deleteShortcut);\n    }\n\n    if (!!config.arrows) {\n        components.push(arrows);\n    }\n    if (!!config.count) {\n        components.push(count);\n    }\n\n    // if(config.deleteShortcut) {\n    //     deleteShortcut.active(config);\n    // }\n\n    components.push(select);\n\n    var publicFunctions = {\n        getContainer: function getContainer() {\n            return mka;\n        },\n        elementIsSelected: function elementIsSelected(elt) {\n            if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                return true;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getSelectableElement: function getSelectableElement(elt) {\n            if (elt.classList && elt.classList.contains(config.eltSelectableClass)) {\n                return elt;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && elt.classList.contains(config.eltSelectableClass)) {\n                    return elt;\n                }\n            }\n            return null;\n        },\n        getSelectablesElements: function getSelectablesElements() {\n            return selectables;\n        },\n        getLastSelectedInDom: function getLastSelectedInDom() {\n            var last = null;\n            Array.from(selection).map(function (elt) {\n                if (!last || elt.offsetTop > last.offsetTop || elt.offsetTop === last.offsetTop && elt.offsetLeft > last.offsetLeft) {\n                    last = elt;\n                }\n            });\n            return last;\n        },\n        getSelection: function getSelection() {\n            var copy = [];\n            Array.from(selection).map(function (elt) {\n                copy.push(elt);\n            });\n            return copy;\n        },\n        updateSelection: function updateSelection(newSelection) {\n            var sameSelection = false;\n            if (selection.length === newSelection.length) {\n                sameSelection = true;\n                Array.from(selection).map(function (elt) {\n                    if (newSelection.indexOf(elt) === -1) {\n                        sameSelection = false;\n                    }\n                });\n            }\n            if (!sameSelection) {\n                selection = newSelection;\n                Array.from(selectables).map(function (elt) {\n                    elt.classList.remove(config.eltSelectedClass);\n                });\n                Array.from(selection).map(function (elt) {\n                    elt.classList.add(config.eltSelectedClass);\n                });\n                Array.from(components).map(function (component) {\n                    component.onSelectionUpdate && component.onSelectionUpdate(selection);\n                });\n            }\n        },\n        removeElements: function removeElements(elements) {\n            Array.from(elements).map(function (elt) {\n                var index = selectables.indexOf(elt);\n                if (index !== -1) {\n                    selectables.splice(index, 1);\n                }\n                index = selection.indexOf(elt);\n                if (index !== -1) {\n                    selection.splice(index, 1);\n                }\n                elt.parentNode.removeChild(elt);\n            });\n            Array.from(components).map(function (component) {\n                component.onSelectionUpdate && component.onSelectionUpdate(selection);\n            });\n        },\n        isMkaContainerFocused: function isMkaContainerFocused(target) {\n            if (target.id === config.focus) {\n                return true;\n            }\n\n            while (target.parentNode) {\n                target = target.parentNode;\n\n                if (target.id === config.focus) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    };\n\n    Array.from(components).map(function (component) {\n        component.init && component.init(config, publicFunctions);\n    });\n\n    var bindComponentsEvents = function bindComponentsEvents(target, eventName) {\n        target.value[eventName] = function (event) {\n            var stop = false;\n            Array.from(components).map(function (component) {\n                if (!stop) {\n                    stop = component[target.name] && component[target.name][eventName] && component[target.name][eventName](event) || false;\n                }\n            });\n        };\n    };\n\n    var mouseEventsList = [\"onmousedown\", \"onmousemove\", \"onmouseup\", \"onclick\", \"ondblclick\"];\n    var mouseEventsTargets = [{ name: \"windowEvents\", value: window }, { name: \"documentEvents\", value: document.body }, { name: \"mkaEvents\", value: mka }];\n\n    var keyEventsList = [\"onkeydown\", \"onkeypress\", \"onkeyup\"];\n\n    Array.from(mouseEventsTargets).map(function (mouseEventTarget) {\n        Array.from(mouseEventsList).map(function (mouseEventName) {\n            bindComponentsEvents(mouseEventTarget, mouseEventName);\n        });\n    });\n\n    Array.from(keyEventsList).map(function (keyEventName) {\n        bindComponentsEvents({ name: \"windowEvents\", value: window }, keyEventName);\n    });\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar mkarcmenuId = 'mkarcmenu';\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n\n    bindContextMenu();\n};\n\nvar windowEvents = exports.windowEvents = {\n    onkeydown: function onkeydown(event) {\n        var code = event.which;\n        if ((code == 37 || code == 38 || code == 39 || code == 40) && !!document.getElementById(mkarcmenuId)) {\n            event.preventDefault();\n            return true;\n        }\n        return false;\n    },\n    onclick: function onclick(event) {\n        if (event.which === 1) {\n            return removeMkaRcMenu();\n        }\n        return false;\n    }\n};\n\nvar removeMkaRcMenu = function removeMkaRcMenu() {\n    if (document.getElementById(mkarcmenuId)) {\n        document.getElementById(mkarcmenuId).remove();\n        return true;\n    }\n    return false;\n};\n\nvar bindContextMenu = function bindContextMenu() {\n\n    // On désactive le click droit sur l'élément principal\n    parentFunctions.getContainer().addEventListener('contextmenu', function (event) {\n        event.preventDefault();\n        removeMkaRcMenu();\n        var selectableElement = parentFunctions.getSelectableElement(event.target);\n        if (selectableElement !== null) {\n\n            if (!parentFunctions.elementIsSelected(selectableElement)) {\n                parentFunctions.updateSelection([selectableElement]);\n            }\n\n            var selection = parentFunctions.getSelection();\n\n            var contextMenu = config.rightClick(selection);\n\n            var newMenu = document.createElement('ul');\n\n            Array.from(contextMenu).map(function (item) {\n                var li = document.createElement('li');\n                li.innerHTML = item.title;\n                li.onclick = item.action;\n                newMenu.appendChild(li);\n            });\n\n            var newDiv = document.createElement('div');\n            newDiv.setAttribute('id', mkarcmenuId);\n            newDiv.style.position = 'absolute';\n            newDiv.style.left = event.pageX + 'px';\n            newDiv.style.top = event.pageY + 'px';\n\n            newDiv.appendChild(newMenu);\n\n            parentFunctions.getContainer().appendChild(newDiv);\n        }\n    });\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bindDropEvents = bindDropEvents;\n// let mka = document.getElementById(\"mka\");\nvar parentFunctions = {};\nvar config = {};\nvar defaultConfig = {\n    dropableClass: '.mka-dropzone'\n};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    Object.keys(defaultConfig).map(function (i) {\n        config[i] = config[i] || defaultConfig[i];\n    });\n\n    parentFunctions = publicFunctions;\n\n    var elements = parentFunctions.getSelectablesElements();\n    var droppers = document.querySelectorAll(config.dropableClass);\n\n    //Application du drag event pour chaque element ayant la classe mka-elt\n    Array.from(elements).map(function (elt) {\n        bindDragEvents(elt);\n    });\n\n    //Application du drop event pour chaque element ayant la classe mka-dropzone\n    Array.from(droppers).map(function (elt) {\n        return bindDropEvents(elt);\n    });\n};\n\nvar isDragging = false;\nvar draggableTarget = false;\n\nvar onSelectionUpdate = exports.onSelectionUpdate = function onSelectionUpdate(selection) {\n    Array.from(parentFunctions.getSelectablesElements()).map(function (elt) {\n        elt.draggable = false;\n    });\n    Array.from(selection).map(function (elt) {\n        elt.draggable = true;\n    });\n};\n\nvar mkaEvents = exports.mkaEvents = {\n    onmousedown: function onmousedown(event) {\n        draggableTarget = event.target && parentFunctions.elementIsSelected(event.target);\n        return false;\n    }\n};\n\nvar documentEvents = exports.documentEvents = {\n    onmousemove: function onmousemove() {\n        isDragging = draggableTarget;\n        return isDragging;\n    }\n};\n\nvar windowEvents = exports.windowEvents = {\n    onmouseup: function onmouseup() {\n        draggableTarget = false;\n        if (isDragging) {\n            isDragging = false;\n            return true;\n        }\n        return false;\n    }\n};\n\nvar bindDragEvents = function bindDragEvents(element) {\n\n    element.addEventListener('dragstart', function (e) {\n        // On recupere les élts sélectionnés\n        var selection = parentFunctions.getSelection();\n\n        // on ajoute une class pour modifier le style de la selection\n        Array.from(selection).map(function (elt) {\n            return elt.classList.add(\"on-drag\");\n        });\n\n        var innerCode = \"\";\n        var wrapper = document.createElement('div');\n        var wrapperSize = selection[0].scrollWidth;\n\n        //On rajoute le code html de chaque éléments dans une variable\n        Array.from(selection).map(function (elt) {\n            innerCode += elt.innerHTML;\n        });\n\n        //On set le innerHTML avec tous les éléments récupérés précedemment\n        wrapper.innerHTML = innerCode;\n        wrapper.id = \"wrapper-drag\";\n        wrapper.style.width = wrapperSize + \"px\";\n\n        //On set la position sur absolute et on sort le wrapper de la page sinon ce dernier s'affiche lors du drag\n        wrapper.style.position = \"absolute\";\n        wrapper.style.top = \"-10000px\";\n\n        wrapper = setWrapperStyle(wrapper);\n\n        document.body.appendChild(wrapper);\n\n        e.dataTransfer.setDragImage(wrapper, 0, 0);\n\n        e.dataTransfer.setData('text/plain', '');\n    });\n\n    element.addEventListener('dragend', function (e) {\n        var selection = parentFunctions.getSelection();\n        // On supprime la div avec l'id wrapper-drag\n        document.getElementById(\"wrapper-drag\").outerHTML = \"\";\n\n        // on retire la class\n        Array.from(selection).map(function (elt) {\n            return elt.classList.remove(\"on-drag\");\n        });\n    });\n};\n\nfunction bindDropEvents(dropper) {\n\n    dropper.addEventListener('dragover', function (e) {\n        //Ajout de la classe pour le hover de la dropzone\n        // Cela permet de voir les zone qui peut recevoir la selection\n        this.classList.add('zone-hover');\n\n        // Il faut absolument laisser le preventDefault pour que le drop sur la zone s'execute\n        e.preventDefault();\n    });\n\n    dropper.addEventListener('dragleave', function () {\n        // On retire la class\n        this.classList.remove('zone-hover');\n    });\n\n    dropper.addEventListener('drop', function (e) {\n\n        // Lorsque l'utilisateur relache la sélection sur la zone dropable \n        // on execute l'action défini par l'utilsateur\n        var selection = parentFunctions.getSelection();\n        config.dropFunction([1, 2]);\n        // Suppression des éléments selectionnés\n        // On recupere les élts sélectionnés\n        parentFunctions.removeElements(selection);\n    });\n}\n\nvar setWrapperStyle = function setWrapperStyle(wrapper) {\n    //On récupère les éléments enfants du wrapper qui servira pour le drag\n    var wrapperChildren = wrapper.children;\n    //On choisit le nombre de pixels qui séparera les éléments en fonction du nombre d'éléments dans la liste\n    var childDistance = wrapperChildren.length > 15 ? 1 : 2;\n\n    wrapper.style.opacity = \"1\";\n\n    // Pour chaque élément du wrapper\n    for (var i = 0; i < wrapperChildren.length; i++) {\n        var child = wrapperChildren[i];\n\n        //Si l'utilisateur a configuré le onDragItemsClass, on applique la classe en question\n        if (config.onDragItemClass) {\n            child.classList.add(config.onDragItemClass);\n        } else {\n            //Sinon on force un style par défaut si l'utilisateur n'a pas configuré le onDragItemsClass\n            child.style.color = \"black\";\n            child.style.backgroundColor = \"white\";\n            child.style.border = \"1px solid grey\";\n            child.style.padding = \"5px\";\n            child.style.textAlign = \"center\";\n            child.style.width = \"100%\";\n\n            // console.log(\"You can use your own class\");\n        }\n\n        // Chaque élément a une position abolute\n        // On multiplie i par un nombre de pixels pour indiquer le décalage et avoir un effet d'empilement\n        child.style.position = \"absolute\";\n        child.style.top = i * childDistance + \"px\";\n        child.style.left = i * childDistance + \"px\";\n\n        //Lorsqu'on parcourt le dernier élément et qu'il y a plus d'un élement\n        if (i === wrapperChildren.length - 1 && wrapperChildren.length > 1) {\n            //On crée une span qui contiendra le nombre d'élements selectionnés\n            var span = document.createElement(\"span\");\n            span.innerHTML = wrapperChildren.length;\n            span.style.height = \"25px\";\n            span.style.width = \"25px\";\n            span.style.lineHeight = \"25px\";\n            span.style.position = \"absolute\";\n            span.style.right = \"-10px\";\n            span.style.top = \"-5px\";\n            span.style.zIndex = \"25\";\n            span.style.borderRadius = \"15px\";\n            span.style.textAlign = \"center\";\n\n            //Si on n'a pas configuré le onDragItemClass alors on applique un style par défaut\n            if (!config.onDragItemClass) {\n                span.style.backgroundColor = \"red\";\n                span.style.color = \"white\";\n            }\n            child.appendChild(span);\n        }\n    }\n\n    return wrapper;\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar firstElementIndex = null;\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    config.eltSelectingClass = config.eltSelectingClass || config.eltSelectedClass;\n    parentFunctions = publicFunctions;\n};\n\nvar square = {};\nvar isInLasso = false;\nvar canStartLasso = false;\nvar selecting = [];\n\nvar mkaEvents = exports.mkaEvents = {\n    onmousedown: function onmousedown(event) {\n        // On démarre la sélection si on utilise le bouton gauche de la souris\n        if (event.which === 1) {\n            if (!event.shiftKey) {\n                canStartLasso = true;\n                firstElementIndex = null;\n\n                // zone du click\n                square.downX = event.pageX + 0;\n                square.downY = event.pageY + 0;\n                square.upX = event.pageX + 0;\n                square.upY = event.pageY + 0;\n                orderCoordinate();\n            } else {\n                var selectableElements = parentFunctions.getSelectablesElements();\n                var selection = parentFunctions.getSelection();\n                var newSelection = [];\n\n                var element = null;\n\n                selectableElements.forEach(function (elt) {\n                    if (elementIsCrossingZone(elt, event.pageX, event.pageY, event.pageX, event.pageY)) {\n                        element = elt;\n                    }\n                });\n\n                if (firstElementIndex === null) {\n                    firstElementIndex = selectableElements.indexOf(selection[0]);\n                }\n\n                if (selection.length > 0) {\n                    var elementIndex = selectableElements.indexOf(element);\n\n                    for (var i = 0; i < selectableElements.length; i++) {\n                        if (i >= elementIndex && i <= firstElementIndex || i <= elementIndex && i >= firstElementIndex) {\n                            newSelection.push(selectableElements[i]);\n                        }\n                    }\n                } else {\n                    newSelection.push(element);\n                }\n\n                parentFunctions.updateSelection(newSelection);\n            }\n\n            return true;\n        }\n        return false;\n    },\n    ondblclick: function ondblclick(event) {\n        isInLasso = false;\n        square.delete();\n        return false;\n    }\n};\n\nvar documentEvents = exports.documentEvents = {\n    onmousemove: function onmousemove(event) {\n        if (canStartLasso) {\n            isInLasso = config.lasso && event.which === 1;\n            if (isInLasso) {\n                if (!event.ctrlKey && !square.isVisble()) {\n                    parentFunctions.updateSelection([]);\n                    firstElementIndex = null;\n                }\n                refreshLasso(event);\n                return true;\n            } else {\n                endLasso();\n            }\n        }\n        return false;\n    }\n};\n\nvar windowEvents = exports.windowEvents = {\n    onclick: function onclick(event) {\n        if (event.which === 1 && !isInLasso && !event.shiftKey) {\n            var element = null;\n            Array.from(parentFunctions.getSelectablesElements()).map(function (elt) {\n                if (elementIsCrossingZone(elt, event.pageX, event.pageY, event.pageX, event.pageY)) {\n                    element = elt;\n                }\n            });\n            if (!element) {\n                parentFunctions.updateSelection([]);\n                firstElementIndex = null;\n            } else {\n                var selection = parentFunctions.getSelection();\n                if (selection.length === 0 || !event.ctrlKey) {\n                    parentFunctions.updateSelection([element]);\n                } else {\n                    var newSelection = parentFunctions.getSelection();\n                    var index = newSelection.indexOf(element);\n                    if (index === -1) {\n                        newSelection.push(element);\n                    } else {\n                        newSelection.splice(index, 1);\n                    }\n                    parentFunctions.updateSelection(newSelection);\n                }\n            }\n            return true;\n        }\n        endLasso();\n        return false;\n    }\n};\n\nsquare = {\n    downX: null,\n    downY: null,\n    upX: null,\n    upY: null,\n    get: function get() {\n        var squareId = \"selection-square\";\n        var squareElt = document.getElementById(squareId);\n        if (!squareElt) {\n            squareElt = document.createElement(\"div\");\n            squareElt.id = squareId;\n            squareElt.style.position = \"absolute\";\n            squareElt.style.backgroundColor = \"rgba(255,0,0,0.5)\";\n            squareElt.style.border = \"1px solid rgba(255,0,0,0.8)\";\n            squareElt.style.display = \"none\";\n            parentFunctions.getContainer().appendChild(squareElt);\n        }\n        return squareElt;\n    },\n    refresh: function refresh() {\n        var squareElt = square.get();\n        squareElt.style.display = \"block\";\n        squareElt.style.top = square.y1 + \"px\";\n        squareElt.style.left = square.x1 + \"px\";\n\n        squareElt.style.width = square.x2 - square.x1 + \"px\";\n        squareElt.style.height = square.y2 - square.y1 + \"px\";\n    },\n    delete: function _delete() {\n        square.get().style.display = \"none\";\n    },\n    isVisble: function isVisble() {\n        return square.get().style.display === \"block\";\n    },\n    isCrossingElt: function isCrossingElt(elt) {\n        return elementIsCrossingZone(elt, square.x1, square.y1, square.x2, square.y2);\n    }\n};\n\nvar refreshLasso = function refreshLasso(event) {\n    square.upX = event.pageX + 0;\n    square.upY = event.pageY + 0;\n\n    orderCoordinate();\n\n    selectLassoItems(event.ctrlKey);\n    square.refresh();\n};\n\nvar endLasso = function endLasso() {\n    square.delete();\n    canStartLasso = false;\n    if (isInLasso) {\n        isInLasso = false;\n        Array.from(selecting).map(function (elt) {\n            elt.classList.remove(config.eltSelectingClass);\n        });\n        parentFunctions.updateSelection(selecting);\n        selecting = [];\n    }\n};\n\nvar orderCoordinate = function orderCoordinate() {\n    // we order coordinate to simplify\n    square.x1 = square.downX;\n    square.x2 = square.upX;\n    square.y1 = square.downY;\n    square.y2 = square.upY;\n    // on part vers la gauche\n    if (square.downX > square.upX) {\n        square.x1 = square.upX;\n        square.x2 = square.downX;\n    }\n\n    // on part vers le haut\n    if (square.downY > square.upY) {\n        square.y1 = square.upY;\n        square.y2 = square.downY;\n    }\n};\n\nvar selectLassoItems = function selectLassoItems(ctrlKey) {\n    var mkaElts = parentFunctions.getSelectablesElements();\n\n    selecting = ctrlKey ? parentFunctions.getSelection() : [];\n\n    // on parcourt chaque elt pour savoir s'ils sont dans la zone selectionné\n    Array.from(mkaElts).map(function (elt) {\n        elt.classList.remove(config.eltSelectingClass);\n        if (square.isCrossingElt(elt) && (!ctrlKey || selecting.indexOf(elt) === -1)) {\n            selecting.push(elt);\n        }\n    });\n    Array.from(selecting).map(function (elt) {\n        elt.classList.add(config.eltSelectingClass);\n    });\n};\n\nvar elementIsCrossingZone = function elementIsCrossingZone(elt, x1, y1, x2, y2) {\n    var rect = elt.getBoundingClientRect();\n    var zoneElt = {\n        x1: elt.offsetLeft,\n        x2: elt.offsetLeft + rect.width,\n        y1: elt.offsetTop,\n        y2: elt.offsetTop + rect.height\n    };\n    return zoneElt.x2 > x1 && x2 > zoneElt.x1 && zoneElt.y2 > y1 && y2 > zoneElt.y1;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar mka = document.getElementById(\"mka\");\nvar copyElts = void 0;\n\nvar active = exports.active = function active(config) {\n    document.onkeyup = function (e) {\n        if (e.which == '67' && e.ctrlKey) {\n            // on utilise array from pour faire une copie dans un tableau,\n            // car lors du ctrl v il ne faut pas prendre en compte la selection actuel\n            copyElts = Array.from(document.getElementsByClassName(\"mka-elt-selected\"));\n        } else if (e.which == '86' && e.ctrlKey) {\n            config.pasteFunction(copyElts);\n        }\n    };\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar onSelectionUpdate = exports.onSelectionUpdate = function onSelectionUpdate(selection) {\n    // si l'élément HTML mka-count existe\n    if (!!document.getElementById(config.count)) {\n        document.getElementById(config.count).innerHTML = selection.length;\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar currentFocus = null;\n\nvar windowEvents = exports.windowEvents = {\n    onkeydown: function onkeydown(event) {\n        var code = event.which;\n\n        if (code == 37 || code == 38 || code == 39 || code == 40) {\n            var selectables = parentFunctions.getSelectablesElements();\n            var newSelection = event.shiftKey ? parentFunctions.getSelection() : [];\n            var lastInDom = parentFunctions.getLastSelectedInDom();\n            currentFocus = event.shiftKey && (currentFocus || lastInDom) || null;\n\n            switch (event.which) {\n                case 37: // left\n                case 38:\n                    // up\n                    if (!event.shiftKey) {\n                        var prev = selectables[selectables.indexOf(lastInDom) - 1];\n                        newSelection = prev ? [prev] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n                case 39: // right\n                case 40:\n                    // down\n                    if (!event.shiftKey) {\n                        var next = selectables[selectables.indexOf(lastInDom) + 1];\n                        newSelection = next ? [next] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n\n                default:\n                    return; // exit this handler for other keys\n            }\n\n            event.preventDefault();\n            var scrollX = newSelection[0].offsetLeft + newSelection[0].offsetWidth / 2 - (window.scrollX + window.innerWidth / 2);\n            var scrollY = newSelection[0].offsetTop + newSelection[0].offsetHeight / 2 - (window.scrollY + window.innerHeight / 2);\n            window.scrollBy(scrollX, scrollY);\n            parentFunctions.updateSelection(newSelection);\n            return true;\n        }\n        return false;\n    }\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\nvar windowEvents = exports.windowEvents = {\n    onkeyup: function onkeyup(e) {\n\n        var selection = parentFunctions.getSelection();\n\n        if (e.which == '46' && selection.length > 0) {\n            config.deleteFunction(selection);\n\n            selection.forEach(function (elt) {\n                elt.parentNode.removeChild(elt);\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar isMkaContainerFocused = false;\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar windowEvents = exports.windowEvents = {\n    onkeydown: function onkeydown(e) {\n\n        if (e.ctrlKey) {\n            var code = e.which;\n\n            if ((code === 65 || code === 97) && isMkaContainerFocused) {\n                var newSelection = parentFunctions.getSelectablesElements();\n\n                parentFunctions.updateSelection(newSelection);\n\n                e.preventDefault();\n            }\n        }\n    },\n    onmousedown: function onmousedown(e) {\n        isMkaContainerFocused = parentFunctions.isMkaContainerFocused(e.target);\n    }\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// mka.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71910a29f57bbf79ba04","import * as rightClick from './rightClick';\nimport * as dndHandler from './DragAndDrop';\nimport * as select from './select';\nimport * as copyPaste from './copyPaste';\nimport * as count from './count';\nimport * as arrows from './arrows';\nimport * as deleteShortcut from './deleteShortcut';\nimport * as selectAllShortcut from './selectAllShortcut';\n\n// principal elt\nlet mka = document.getElementById(\"mka\");\nif (!mka) throw new Error('mka id not found');\n\nlet config = {\n    \"eltSelectableClass\": \"mka-elt\",\n    \"eltSelectedClass\": \"mka-elt-selected\",\n    \"onDragItemClass\": null,\n    \"dragNdrop\": true,\n    \"rightClick\": false,\n    \"lasso\": true,\n    \"selectAllShortcut\": true,\n    \"copyPaste\": true,\n    \"arrows\": true,\n    \"deleteShortcut\": true,\n    \"count\": \"\",\n    \"dropFunction\": function (ids) {\n        console.log(ids);\n        console.log(\"Default drop function, think to implement this function\");\n    },\n    \"pasteFunction\": (items) => {\n        console.log(items);\n        console.log(\"Default past function, think to implement this function\");\n    },\n    \"deleteFunction\": function (items) {\n        console.log(items);\n        console.log(\"Default delete function, think to implement this function\");\n    }\n}\n\nconfig.actions = [];\n\nlet selectables = [];\nlet selection = [];\nlet components = [];\n\nHTMLElement.prototype.mkaInit = function (clientConfig) {\n    Object.keys(clientConfig).map((i) => {\n        config[i] = clientConfig[i];\n    });\n\n    selectables = [].slice.call(document.getElementsByClassName(config.eltSelectableClass));\n\n    // on désactive la selection de text\n    mka.style.userSelect = \"none\";\n\n\n    if (!!config.rightClick) {\n        components.push(rightClick);\n    }\n\n    if (config.dragNdrop) {\n        components.push(dndHandler);\n    }\n\n    if(config.selectAllShortcut){\n        components.push(selectAllShortcut);\n    }\n\n    if (config.copyPaste) {\n        components.push(copyPaste);\n    }\n\n    if(config.deleteShortcut) {\n        components.push(deleteShortcut);\n    }\n\n    if (!!config.arrows) {\n        components.push(arrows);\n    }\n    if (!!config.count) {\n        components.push(count);\n    }\n\n    // if(config.deleteShortcut) {\n    //     deleteShortcut.active(config);\n    // }\n\n    components.push(select);\n\n    let publicFunctions = {\n        getContainer: () => {\n            return mka;\n        },\n        elementIsSelected: (elt) => {\n            if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                return true;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getSelectableElement: (elt) => {\n            if (elt.classList && elt.classList.contains(config.eltSelectableClass)) {\n                return elt;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && elt.classList.contains(config.eltSelectableClass)) {\n                    return elt;\n                }\n            }\n            return null;\n        },\n        getSelectablesElements: () => {\n            return selectables;\n        },\n        getLastSelectedInDom: () => {\n            let last = null;\n            Array.from(selection).map(elt => {\n                if (!last || elt.offsetTop > last.offsetTop || elt.offsetTop === last.offsetTop && elt.offsetLeft > last.offsetLeft) {\n                    last = elt;\n                }\n            });\n            return last;\n        },\n        getSelection: () => {\n            let copy = [];\n            Array.from(selection).map(elt => {\n                copy.push(elt);\n            });\n            return copy;\n        },\n        updateSelection: (newSelection) => {\n            let sameSelection = false;\n            if (selection.length === newSelection.length) {\n                sameSelection = true;\n                Array.from(selection).map(elt => {\n                    if (newSelection.indexOf(elt) === -1) {\n                        sameSelection = false;\n                    }\n                });\n            }\n            if (!sameSelection) {\n                selection = newSelection;\n                Array.from(selectables).map(elt => {\n                    elt.classList.remove(config.eltSelectedClass);\n                });\n                Array.from(selection).map(elt => {\n                    elt.classList.add(config.eltSelectedClass);\n                });\n                Array.from(components).map(component => {\n                    component.onSelectionUpdate && component.onSelectionUpdate(selection);\n                });\n            }\n        },\n        removeElements: (elements) => {\n            Array.from(elements).map(elt => {\n                let index = selectables.indexOf(elt);\n                if (index !== -1) {\n                    selectables.splice(index, 1);\n                }\n                index = selection.indexOf(elt);\n                if (index !== -1) {\n                    selection.splice(index, 1);\n                }\n                elt.parentNode.removeChild(elt);\n            });\n            Array.from(components).map(component => {\n                component.onSelectionUpdate && component.onSelectionUpdate(selection);\n            });\n        },\n        isMkaContainerFocused: (target) => {\n            if (target.id === config.focus) {\n                return true;\n            }\n\n            while (target.parentNode) {\n                target = target.parentNode;\n\n                if (target.id === config.focus) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    };\n\n    Array.from(components).map(component => {\n        component.init && component.init(config, publicFunctions);\n    });\n\n    let bindComponentsEvents = (target, eventName) => {\n        target.value[eventName] = (event) => {\n            let stop = false;\n            Array.from(components).map(component => {\n                if (!stop) {\n                    stop = component[target.name] && component[target.name][eventName] && component[target.name][eventName](event) || false;\n                }\n            });\n        }\n    }\n\n    let mouseEventsList = [\"onmousedown\", \"onmousemove\", \"onmouseup\", \"onclick\", \"ondblclick\"];\n    let mouseEventsTargets = [\n        {name: \"windowEvents\", value: window},\n        {name: \"documentEvents\", value: document.body},\n        {name: \"mkaEvents\", value: mka}\n    ];\n\n    let keyEventsList = [\"onkeydown\", \"onkeypress\", \"onkeyup\"];\n\n    Array.from(mouseEventsTargets).map(mouseEventTarget => {\n        Array.from(mouseEventsList).map(mouseEventName => {\n            bindComponentsEvents(mouseEventTarget, mouseEventName);\n        });\n    });\n\n    Array.from(keyEventsList).map(keyEventName => {\n        bindComponentsEvents({name: \"windowEvents\", value: window}, keyEventName);\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","let parentFunctions = {};\nlet config = {};\nconst mkarcmenuId = 'mkarcmenu';\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n\n    bindContextMenu();\n}\n\nexport let windowEvents = {\n    onkeydown: (event) => {\n        let code = event.which;\n        if ((code == 37 || code == 38 || code == 39 || code == 40) && !!document.getElementById(mkarcmenuId)) {\n            event.preventDefault();\n            return true;\n        }\n        return false;\n    },\n    onclick: (event) => {\n        if (event.which === 1) {\n            return removeMkaRcMenu();\n        }\n        return false;\n    }\n}\n\nlet removeMkaRcMenu = () => {\n    if (document.getElementById(mkarcmenuId)) {\n        document.getElementById(mkarcmenuId).remove();\n        return true;\n    }\n    return false;\n}\n\nlet bindContextMenu = () => {\n\n    // On désactive le click droit sur l'élément principal\n    parentFunctions.getContainer().addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        removeMkaRcMenu();\n        const selectableElement = parentFunctions.getSelectableElement(event.target);\n        if (selectableElement !== null) {\n\n            if (!parentFunctions.elementIsSelected(selectableElement)) {\n                parentFunctions.updateSelection([selectableElement]);\n            }\n\n            let selection = parentFunctions.getSelection();\n\n            let contextMenu = config.rightClick(selection);\n\n            let newMenu = document.createElement('ul');\n\n            Array.from(contextMenu).map(item => {\n                let li = document.createElement('li');\n                li.innerHTML = item.title;\n                li.onclick = item.action;\n                newMenu.appendChild(li);\n            });\n\n\n            const newDiv = document.createElement('div');\n            newDiv.setAttribute('id', mkarcmenuId);\n            newDiv.style.position = 'absolute';\n            newDiv.style.left = event.pageX + 'px';\n            newDiv.style.top = event.pageY + 'px';\n\n            newDiv.appendChild(newMenu);\n\n            parentFunctions.getContainer().appendChild(newDiv);\n\n        }\n    });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/rightClick.js","// let mka = document.getElementById(\"mka\");\nlet parentFunctions = {};\nlet config = {};\nlet defaultConfig = {\n    dropableClass: '.mka-dropzone'\n};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    Object.keys(defaultConfig).map((i) => {\n        config[i] = config[i] || defaultConfig[i];\n    });\n\n    parentFunctions = publicFunctions;\n\n    let elements = parentFunctions.getSelectablesElements();\n    let droppers = document.querySelectorAll(config.dropableClass);\n\n    //Application du drag event pour chaque element ayant la classe mka-elt\n    Array.from(elements).map(elt => {\n        bindDragEvents(elt);\n    });\n\n    //Application du drop event pour chaque element ayant la classe mka-dropzone\n    Array.from(droppers).map(elt => bindDropEvents(elt));\n}\n\nlet isDragging = false;\nlet draggableTarget = false;\n\nexport let onSelectionUpdate = (selection) => {\n    Array.from(parentFunctions.getSelectablesElements()).map(elt => {\n        elt.draggable = false;\n    });\n    Array.from(selection).map(elt => {\n        elt.draggable = true;\n    });\n};\n\nexport let mkaEvents = {\n    onmousedown: (event) => {\n        draggableTarget = event.target && parentFunctions.elementIsSelected(event.target);\n        return false;\n    }\n};\n\nexport let documentEvents = {\n    onmousemove: () => {\n        isDragging = draggableTarget;\n        return isDragging;\n    }\n};\n\nexport let windowEvents = {\n    onmouseup: () => {\n        draggableTarget = false;\n        if (isDragging) {\n            isDragging = false;\n            return true;\n        }\n        return false;\n    }\n};\n\nlet bindDragEvents = (element) => {\n\n    element.addEventListener('dragstart', function (e) {\n        // On recupere les élts sélectionnés\n        let selection = parentFunctions.getSelection();\n\n        // on ajoute une class pour modifier le style de la selection\n        Array.from(selection).map((elt) => elt.classList.add(\"on-drag\"));\n\n        let innerCode = \"\";\n        let wrapper = document.createElement('div');\n        const wrapperSize = selection[0].scrollWidth;\n\n        //On rajoute le code html de chaque éléments dans une variable\n        Array.from(selection).map((elt) => {\n            innerCode += elt.innerHTML;\n        });\n\n        //On set le innerHTML avec tous les éléments récupérés précedemment\n        wrapper.innerHTML = innerCode;\n        wrapper.id = \"wrapper-drag\";\n        wrapper.style.width = wrapperSize + \"px\";\n\n        //On set la position sur absolute et on sort le wrapper de la page sinon ce dernier s'affiche lors du drag\n        wrapper.style.position = \"absolute\";\n        wrapper.style.top = \"-10000px\";\n\n        wrapper = setWrapperStyle(wrapper);\n\n        document.body.appendChild(wrapper);\n\n        e.dataTransfer.setDragImage(wrapper, 0, 0);\n\n        e.dataTransfer.setData('text/plain', '');\n\n    });\n\n    element.addEventListener('dragend', function (e) {\n        let selection = parentFunctions.getSelection();\n        // On supprime la div avec l'id wrapper-drag\n        document.getElementById(\"wrapper-drag\").outerHTML = \"\";\n\n        // on retire la class\n        Array.from(selection).map((elt) => elt.classList.remove(\"on-drag\"));\n    });\n}\n\nexport function bindDropEvents(dropper) {\n\n    dropper.addEventListener('dragover', function (e) {\n        //Ajout de la classe pour le hover de la dropzone\n        // Cela permet de voir les zone qui peut recevoir la selection\n        this.classList.add('zone-hover');\n\n        // Il faut absolument laisser le preventDefault pour que le drop sur la zone s'execute\n        e.preventDefault();\n    });\n\n    dropper.addEventListener('dragleave', function () {\n        // On retire la class\n        this.classList.remove('zone-hover');\n    });\n\n    dropper.addEventListener('drop', function (e) {\n\n        // Lorsque l'utilisateur relache la sélection sur la zone dropable \n        // on execute l'action défini par l'utilsateur\n        let selection = parentFunctions.getSelection();\n        config.dropFunction([1, 2]);\n        // Suppression des éléments selectionnés\n        // On recupere les élts sélectionnés\n        parentFunctions.removeElements(selection);\n\n    });\n}\n\n\nlet setWrapperStyle = (wrapper) => {\n    //On récupère les éléments enfants du wrapper qui servira pour le drag\n    let wrapperChildren = wrapper.children;\n    //On choisit le nombre de pixels qui séparera les éléments en fonction du nombre d'éléments dans la liste\n    let childDistance = wrapperChildren.length > 15 ? 1 : 2;\n\n    wrapper.style.opacity = \"1\";\n\n    // Pour chaque élément du wrapper\n    for (let i = 0; i < wrapperChildren.length; i++) {\n        let child = wrapperChildren[i];\n\n        //Si l'utilisateur a configuré le onDragItemsClass, on applique la classe en question\n        if (config.onDragItemClass) {\n            child.classList.add(config.onDragItemClass);\n        } else {\n            //Sinon on force un style par défaut si l'utilisateur n'a pas configuré le onDragItemsClass\n            child.style.color = \"black\";\n            child.style.backgroundColor = \"white\";\n            child.style.border = \"1px solid grey\";\n            child.style.padding = \"5px\";\n            child.style.textAlign = \"center\";\n            child.style.width = \"100%\";\n\n\n            // console.log(\"You can use your own class\");\n        }\n\n\n        // Chaque élément a une position abolute\n        // On multiplie i par un nombre de pixels pour indiquer le décalage et avoir un effet d'empilement\n        child.style.position = \"absolute\";\n        child.style.top = (i * childDistance) + \"px\";\n        child.style.left = (i * childDistance) + \"px\";\n\n        //Lorsqu'on parcourt le dernier élément et qu'il y a plus d'un élement\n        if (i === wrapperChildren.length - 1 && wrapperChildren.length > 1) {\n            //On crée une span qui contiendra le nombre d'élements selectionnés\n            let span = document.createElement(\"span\");\n            span.innerHTML = wrapperChildren.length;\n            span.style.height = \"25px\";\n            span.style.width = \"25px\";\n            span.style.lineHeight = \"25px\";\n            span.style.position = \"absolute\";\n            span.style.right = \"-10px\";\n            span.style.top = \"-5px\";\n            span.style.zIndex = \"25\";\n            span.style.borderRadius = \"15px\";\n            span.style.textAlign = \"center\";\n\n            //Si on n'a pas configuré le onDragItemClass alors on applique un style par défaut\n            if (!config.onDragItemClass) {\n                span.style.backgroundColor = \"red\";\n                span.style.color = \"white\";\n            }\n            child.appendChild(span);\n        }\n    }\n\n    return wrapper;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/DragAndDrop.js","let parentFunctions = {};\nlet config = {};\nlet firstElementIndex = null;\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    config.eltSelectingClass = config.eltSelectingClass || config.eltSelectedClass;\n    parentFunctions = publicFunctions;\n}\n\nlet square = {};\nlet isInLasso = false;\nlet canStartLasso = false;\nlet selecting = [];\n\nexport let mkaEvents = {\n    onmousedown: (event) => {\n        // On démarre la sélection si on utilise le bouton gauche de la souris\n        if (event.which === 1) {\n            if(!event.shiftKey){\n                canStartLasso = true;\n                firstElementIndex = null;\n\n                // zone du click\n                square.downX = event.pageX + 0;\n                square.downY = event.pageY + 0;\n                square.upX = event.pageX + 0;\n                square.upY = event.pageY + 0;\n                orderCoordinate();\n            } else {\n                let selectableElements = parentFunctions.getSelectablesElements();\n                let selection = parentFunctions.getSelection();\n                let newSelection = [];\n\n                let element = null;\n\n                selectableElements.forEach(function (elt) {\n                    if (elementIsCrossingZone(elt, event.pageX, event.pageY, event.pageX, event.pageY)) {\n                        element = elt;\n                    }\n                });\n\n                if(firstElementIndex === null){\n                    firstElementIndex = selectableElements.indexOf(selection[0]);\n                }\n\n                if(selection.length > 0){\n                    let elementIndex = selectableElements.indexOf(element);\n\n                    for(let i = 0; i < selectableElements.length; i++) {\n                        if(i >= elementIndex && i <= firstElementIndex || i <= elementIndex && i >= firstElementIndex){\n                            newSelection.push(selectableElements[i]);\n                        }\n                    }\n                } else {\n                    newSelection.push(element);\n                }\n\n                parentFunctions.updateSelection(newSelection);\n\n            }\n\n            return true;\n        }\n        return false;\n    },\n    ondblclick: (event) => {\n        isInLasso = false;\n        square.delete();\n        return false;\n    }\n};\n\nexport let documentEvents = {\n    onmousemove: (event) => {\n        if (canStartLasso) {\n            isInLasso = config.lasso && event.which === 1;\n            if (isInLasso) {\n                if (!event.ctrlKey && !square.isVisble()) {\n                    parentFunctions.updateSelection([]);\n                    firstElementIndex = null;\n                }\n                refreshLasso(event);\n                return true;\n            } else {\n                endLasso();\n            }\n        }\n        return false;\n    }\n};\n\nexport let windowEvents = {\n    onclick: (event) => {\n        if (event.which === 1 && !isInLasso && !event.shiftKey) {\n            let element = null;\n            Array.from(parentFunctions.getSelectablesElements()).map(elt => {\n                if (elementIsCrossingZone(elt, event.pageX, event.pageY, event.pageX, event.pageY)) {\n                    element = elt;\n                }\n            });\n            if (!element) {\n                parentFunctions.updateSelection([]);\n                firstElementIndex = null;\n            } else {\n                let selection = parentFunctions.getSelection();\n                if (selection.length === 0 || !event.ctrlKey) {\n                    parentFunctions.updateSelection([element]);\n                } else {\n                    let newSelection = parentFunctions.getSelection();\n                    let index = newSelection.indexOf(element);\n                    if (index === -1) {\n                        newSelection.push(element);\n                    } else {\n                        newSelection.splice(index, 1);\n                    }\n                    parentFunctions.updateSelection(newSelection);\n                }\n            }\n            return true;\n        }\n        endLasso();\n        return false;\n    }\n};\n\nsquare = {\n    downX: null,\n    downY: null,\n    upX: null,\n    upY: null,\n    get: () => {\n        let squareId = \"selection-square\";\n        let squareElt = document.getElementById(squareId);\n        if (!squareElt) {\n            squareElt = document.createElement(\"div\");\n            squareElt.id = squareId;\n            squareElt.style.position = \"absolute\";\n            squareElt.style.backgroundColor = \"rgba(255,0,0,0.5)\";\n            squareElt.style.border = \"1px solid rgba(255,0,0,0.8)\";\n            squareElt.style.display = \"none\";\n            parentFunctions.getContainer().appendChild(squareElt);\n        }\n        return squareElt;\n    },\n    refresh: () => {\n        let squareElt = square.get();\n        squareElt.style.display = \"block\";\n        squareElt.style.top = square.y1 + \"px\";\n        squareElt.style.left = square.x1 + \"px\";\n\n        squareElt.style.width = (square.x2 - square.x1) + \"px\";\n        squareElt.style.height = (square.y2 - square.y1) + \"px\";\n    },\n    delete: () => {\n        square.get().style.display = \"none\";\n    },\n    isVisble: () => {\n        return square.get().style.display === \"block\";\n    },\n    isCrossingElt: (elt) => {\n        return elementIsCrossingZone(elt, square.x1, square.y1, square.x2, square.y2);\n    }\n};\n\nlet refreshLasso = (event) => {\n    square.upX = event.pageX + 0;\n    square.upY = event.pageY + 0;\n\n    orderCoordinate();\n\n    selectLassoItems(event.ctrlKey);\n    square.refresh();\n\n};\n\nlet endLasso = () => {\n    square.delete();\n    canStartLasso = false;\n    if (isInLasso) {\n        isInLasso = false;\n        Array.from(selecting).map(elt => {\n            elt.classList.remove(config.eltSelectingClass);\n        });\n        parentFunctions.updateSelection(selecting);\n        selecting = [];\n    }\n}\n\nlet orderCoordinate = () => {\n    // we order coordinate to simplify\n    square.x1 = square.downX;\n    square.x2 = square.upX;\n    square.y1 = square.downY;\n    square.y2 = square.upY;\n    // on part vers la gauche\n    if (square.downX > square.upX) {\n        square.x1 = square.upX;\n        square.x2 = square.downX;\n    }\n\n    // on part vers le haut\n    if (square.downY > square.upY) {\n        square.y1 = square.upY;\n        square.y2 = square.downY;\n    }\n}\n\nlet selectLassoItems = (ctrlKey) => {\n    let mkaElts = parentFunctions.getSelectablesElements();\n\n    selecting = (ctrlKey) ? parentFunctions.getSelection() : [];\n\n    // on parcourt chaque elt pour savoir s'ils sont dans la zone selectionné\n    Array.from(mkaElts).map(elt => {\n        elt.classList.remove(config.eltSelectingClass);\n        if (square.isCrossingElt(elt) && (!ctrlKey || selecting.indexOf(elt) === -1)) {\n            selecting.push(elt);\n        }\n    });\n    Array.from(selecting).map(elt => {\n        elt.classList.add(config.eltSelectingClass);\n    });\n}\n\nlet elementIsCrossingZone = (elt, x1, y1, x2, y2) => {\n    let rect = elt.getBoundingClientRect();\n    let zoneElt = {\n        x1: elt.offsetLeft,\n        x2: (elt.offsetLeft + rect.width),\n        y1: elt.offsetTop,\n        y2: (elt.offsetTop + rect.height)\n    };\n    return zoneElt.x2 > x1 && x2 > zoneElt.x1 && zoneElt.y2 > y1 && y2 > zoneElt.y1;\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/select.js","let mka = document.getElementById(\"mka\");\nlet copyElts;\n\nexport let active = (config) => {\n    document.onkeyup = (e) => {\n        if (e.which == '67' && e.ctrlKey) {\n            // on utilise array from pour faire une copie dans un tableau,\n            // car lors du ctrl v il ne faut pas prendre en compte la selection actuel\n            copyElts = Array.from(document.getElementsByClassName(\"mka-elt-selected\"));\n        } else if (e.which == '86' && e.ctrlKey) {\n            config.pasteFunction(copyElts);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/copyPaste.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nexport let onSelectionUpdate = (selection) => {\n// si l'élément HTML mka-count existe\n    if (!!document.getElementById(config.count)) {\n        document.getElementById(config.count).innerHTML = selection.length;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/count.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nlet currentFocus = null;\n\nexport let windowEvents = {\n    onkeydown: (event) => {\n        let code = event.which;\n\n        if (code == 37 || code == 38 || code == 39 || code == 40) {\n            let selectables = parentFunctions.getSelectablesElements();\n            let newSelection = (event.shiftKey) ? parentFunctions.getSelection() : [];\n            let lastInDom = parentFunctions.getLastSelectedInDom();\n            currentFocus = event.shiftKey && (currentFocus || lastInDom) || null;\n\n\n            switch (event.which) {\n                case 37: // left\n                case 38: // up\n                    if (!event.shiftKey) {\n                        let prev = selectables[selectables.indexOf(lastInDom) - 1];\n                        newSelection = (prev) ? [prev] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n                case 39: // right\n                case 40: // down\n                    if (!event.shiftKey) {\n                        let next = selectables[selectables.indexOf(lastInDom) + 1];\n                        newSelection = (next) ? [next] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n\n                default:\n                    return; // exit this handler for other keys\n            }\n\n            event.preventDefault();\n            let scrollX = (newSelection[0].offsetLeft + newSelection[0].offsetWidth / 2) - (window.scrollX + window.innerWidth / 2);\n            let scrollY = (newSelection[0].offsetTop + newSelection[0].offsetHeight / 2) - (window.scrollY + window.innerHeight / 2);\n            window.scrollBy(scrollX, scrollY);\n            parentFunctions.updateSelection(newSelection);\n            return true;\n        }\n        return false;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/arrows.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\nexport let windowEvents = {\n    onkeyup: (e) => {\n\n        let selection = parentFunctions.getSelection();\n\n        if(e.which == '46' && selection.length > 0) {\n            config.deleteFunction(selection);\n\n            selection.forEach(function (elt) {\n               elt.parentNode.removeChild(elt);\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/deleteShortcut.js","let parentFunctions = {};\nlet config = {};\nlet isMkaContainerFocused = false;\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nexport let windowEvents = {\n    onkeydown : (e) => {\n\n        if(e.ctrlKey) {\n            let code = e.which;\n\n            if((code === 65 || code === 97) && isMkaContainerFocused) {\n                let newSelection = parentFunctions.getSelectablesElements();\n\n                parentFunctions.updateSelection(newSelection);\n\n                e.preventDefault();\n            }\n        }\n    },\n    onmousedown : (e) => {\n        isMkaContainerFocused = parentFunctions.isMkaContainerFocused(e.target);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/selectAllShortcut.js"],"sourceRoot":""}