{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mka.min.js","webpack:///webpack/bootstrap a4367daf0e50e8698567","webpack:///./src/js/main.js","webpack:///./src/js/dbClick.js","webpack:///./src/js/rightClick.js","webpack:///./src/js/DragAndDrop.js","webpack:///./src/js/select.js","webpack:///./src/js/copyPaste.js","webpack:///./src/js/count.js","webpack:///./src/js/arrows.js","webpack:///./src/js/deleteShortcut.js","webpack:///./src/js/selectAllShortcut.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","default","_dbClick","dbClick","_rightClick","rightClick","_DragAndDrop","dndHandler","_select","select","_copyPaste","copyPaste","_count","count","_arrows","arrows","_deleteShortcut","deleteShortcut","_selectAllShortcut","selectAllShortcut","config","eltsSelectable","eltSelectedClass","eltSelectingClass","onDragItemClass","dragNdrop","lasso","dropFunction","ids","console","log","pasteFunction","items","deleteFunction","actions","selectables","selection","components","HTMLElement","mkaInit","clientConfig","mka","keys","map","slice","style","userSelect","push","publicFunctions","getContainer","elementIsSelected","elt","classList","contains","parentNode","getSelectableElement","indexOf","getSelectablesElements","getLastSelectedInDom","last","Array","from","offsetTop","offsetLeft","getSelection","copy","updateSelection","newSelection","sameSelection","length","remove","add","component","onSelectionUpdate","removeElements","elements","index","splice","removeChild","isMkaContainerFocused","target","init","bindComponentsEvents","eventName","value","event","stop","mouseEventsList","mouseEventsTargets","window","document","body","keyEventsList","mouseEventTarget","mouseEventName","keyEventName","parentFunctions","conf","mkaEvents","ondblclick","e","element","removeMkaRcMenu","bindContextMenu","windowEvents","onkeydown","code","which","getElementById","preventDefault","onclick","addEventListener","selectableElement","contextMenu","newMenu","createElement","item","li","innerHTML","title","action","appendChild","newDiv","setAttribute","position","left","pageX","top","pageY","bindDropEvents","dropper","defaultConfig","dropableClass","isDragging","droppers","querySelectorAll","bindDragEvents","draggableTarget","draggable","onmousedown","documentEvents","onmousemove","innerCode","wrapper","wrapperSize","scrollWidth","id","width","setWrapperStyle","dataTransfer","setDragImage","setData","outerHTML","wrapperChildren","children","childDistance","opacity","child","color","backgroundColor","border","padding","textAlign","span","height","lineHeight","right","zIndex","borderRadius","focusedElementIndex","square","isInLasso","canStartLasso","selecting","shiftKey","selectableElements","elementIndex","firstIndex","Math","min","lastIndex","max","ctrlKey","eltIndex","downX","downY","upX","upY","orderCoordinate","endLasso","isVisble","refreshLasso","clearSelecting","selectableElt","lastSelection","onmouseup","pushSelectingElements","squareElt","display","refresh","y1","x1","x2","y2","isCrossingElt","elementIsCrossingZone","selectLassoItems","mkaElts","rect","getBoundingClientRect","zoneElt","copyElts","onkeyup","currentFocus","lastInDom","prev","next","scrollX","offsetWidth","innerWidth","scrollY","offsetHeight","innerHeight","scrollBy","forEach"],"mappings":"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","file":"mka.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mka\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mka\"] = factory();\n\telse\n\t\troot[\"mka\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mka\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mka\"] = factory();\n\telse\n\t\troot[\"mka\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _dbClick = __webpack_require__(1);\n\nvar dbClick = _interopRequireWildcard(_dbClick);\n\nvar _rightClick = __webpack_require__(2);\n\nvar rightClick = _interopRequireWildcard(_rightClick);\n\nvar _DragAndDrop = __webpack_require__(3);\n\nvar dndHandler = _interopRequireWildcard(_DragAndDrop);\n\nvar _select = __webpack_require__(4);\n\nvar select = _interopRequireWildcard(_select);\n\nvar _copyPaste = __webpack_require__(5);\n\nvar copyPaste = _interopRequireWildcard(_copyPaste);\n\nvar _count = __webpack_require__(6);\n\nvar count = _interopRequireWildcard(_count);\n\nvar _arrows = __webpack_require__(7);\n\nvar arrows = _interopRequireWildcard(_arrows);\n\nvar _deleteShortcut = __webpack_require__(8);\n\nvar deleteShortcut = _interopRequireWildcard(_deleteShortcut);\n\nvar _selectAllShortcut = __webpack_require__(9);\n\nvar selectAllShortcut = _interopRequireWildcard(_selectAllShortcut);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar config = {\n    \"eltsSelectable\": [],\n    \"eltSelectedClass\": \"mka-elt-selected\",\n    \"eltSelectingClass\": \"mka-elt-selecting\",\n    \"onDragItemClass\": null,\n    \"dragNdrop\": true,\n    \"rightClick\": false,\n    \"dbClick\": false,\n    \"lasso\": true,\n    \"selectAllShortcut\": true,\n    \"copyPaste\": true,\n    \"arrows\": true,\n    \"deleteShortcut\": true,\n    \"count\": \"\",\n    \"dropFunction\": function dropFunction(ids) {\n        console.log(ids);\n        console.log(\"Default drop function, think to implement this function\");\n    },\n    \"pasteFunction\": function pasteFunction(items) {\n        console.log(items);\n        console.log(\"Default past function, think to implement this function\");\n    },\n    \"deleteFunction\": function deleteFunction(items) {\n        console.log(items);\n        console.log(\"Default delete function, think to implement this function\");\n    }\n};\n\nconfig.actions = [];\n\nvar selectables = [];\nvar selection = [];\nvar components = [];\n\nHTMLElement.prototype.mkaInit = function (clientConfig) {\n    var mka = this;\n\n    Object.keys(clientConfig).map(function (i) {\n        config[i] = clientConfig[i];\n    });\n\n    selectables = [].slice.call(config.eltsSelectable);\n\n    // on désactive la selection de text\n    mka.style.userSelect = \"none\";\n\n    if (!!config.dbClick) {\n        components.push(dbClick);\n    }\n\n    if (!!config.rightClick) {\n        components.push(rightClick);\n    }\n\n    if (config.dragNdrop) {\n        components.push(dndHandler);\n    }\n\n    if (config.selectAllShortcut) {\n        components.push(selectAllShortcut);\n    }\n\n    if (config.copyPaste) {\n        components.push(copyPaste);\n    }\n\n    if (config.deleteShortcut) {\n        components.push(deleteShortcut);\n    }\n\n    if (!!config.arrows) {\n        components.push(arrows);\n    }\n    if (!!config.count) {\n        components.push(count);\n    }\n\n    // if(config.deleteShortcut) {\n    //     deleteShortcut.active(config);\n    // }\n\n    components.push(select);\n\n    var publicFunctions = {\n        getContainer: function getContainer() {\n            return mka;\n        },\n        elementIsSelected: function elementIsSelected(elt) {\n            if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                return true;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getSelectableElement: function getSelectableElement(elt) {\n            if (elt.classList && selectables.indexOf(elt) !== -1) {\n                return elt;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && selectables.indexOf(elt) !== -1) {\n                    return elt;\n                }\n            }\n            return null;\n        },\n        getSelectablesElements: function getSelectablesElements() {\n            return selectables;\n        },\n        getLastSelectedInDom: function getLastSelectedInDom() {\n            var last = null;\n            Array.from(selection).map(function (elt) {\n                if (!last || elt.offsetTop > last.offsetTop || elt.offsetTop === last.offsetTop && elt.offsetLeft > last.offsetLeft) {\n                    last = elt;\n                }\n            });\n            return last;\n        },\n        getSelection: function getSelection() {\n            var copy = [];\n            Array.from(selection).map(function (elt) {\n                copy.push(elt);\n            });\n            return copy;\n        },\n        updateSelection: function updateSelection(newSelection) {\n            var sameSelection = false;\n            if (selection.length === newSelection.length) {\n                sameSelection = true;\n                Array.from(selection).map(function (elt) {\n                    if (newSelection.indexOf(elt) === -1) {\n                        sameSelection = false;\n                    }\n                });\n            }\n            if (!sameSelection) {\n                selection = newSelection;\n                Array.from(selectables).map(function (elt) {\n                    elt.classList.remove(config.eltSelectedClass);\n                });\n                Array.from(selection).map(function (elt) {\n                    elt.classList.add(config.eltSelectedClass);\n                });\n                Array.from(components).map(function (component) {\n                    component.onSelectionUpdate && component.onSelectionUpdate(selection);\n                });\n            }\n        },\n        removeElements: function removeElements(elements) {\n            Array.from(elements).map(function (elt) {\n                var index = selectables.indexOf(elt);\n                if (index !== -1) {\n                    selectables.splice(index, 1);\n                }\n                index = selection.indexOf(elt);\n                if (index !== -1) {\n                    selection.splice(index, 1);\n                }\n                elt.parentNode.removeChild(elt);\n            });\n            Array.from(components).map(function (component) {\n                component.onSelectionUpdate && component.onSelectionUpdate(selection);\n            });\n        },\n        isMkaContainerFocused: function isMkaContainerFocused(target) {\n            if (target === mka) {\n                return true;\n            }\n\n            while (target.parentNode) {\n                target = target.parentNode;\n\n                if (target === mka) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    };\n\n    Array.from(components).map(function (component) {\n        component.init && component.init(config, publicFunctions);\n    });\n\n    var bindComponentsEvents = function bindComponentsEvents(target, eventName) {\n        target.value[eventName] = function (event) {\n            var stop = false;\n            Array.from(components).map(function (component) {\n                if (!stop) {\n                    stop = component[target.name] && component[target.name][eventName] && component[target.name][eventName](event) || false;\n                }\n            });\n        };\n    };\n\n    var mouseEventsList = [\"onmousedown\", \"onmousemove\", \"onmouseup\", \"onclick\", \"ondblclick\"];\n    var mouseEventsTargets = [{ name: \"windowEvents\", value: window }, { name: \"documentEvents\", value: document.body }, { name: \"mkaEvents\", value: mka }];\n\n    var keyEventsList = [\"onkeydown\", \"onkeypress\", \"onkeyup\"];\n\n    Array.from(mouseEventsTargets).map(function (mouseEventTarget) {\n        Array.from(mouseEventsList).map(function (mouseEventName) {\n            bindComponentsEvents(mouseEventTarget, mouseEventName);\n        });\n    });\n\n    Array.from(keyEventsList).map(function (keyEventName) {\n        bindComponentsEvents({ name: \"windowEvents\", value: window }, keyEventName);\n    });\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar mkaEvents = exports.mkaEvents = {\n    ondblclick: function ondblclick(e) {\n        var element = parentFunctions.getSelectableElement(e.target);\n        if (!!element && typeof config.dbClick === 'function') {\n            parentFunctions.updateSelection([element]);\n            config.dbClick(element);\n            return true;\n        }\n        return false;\n    }\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar mkarcmenuId = 'mkarcmenu';\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n\n    bindContextMenu();\n};\n\nvar windowEvents = exports.windowEvents = {\n    onkeydown: function onkeydown(event) {\n        var code = event.which;\n        if ((code == 37 || code == 38 || code == 39 || code == 40) && !!document.getElementById(mkarcmenuId)) {\n            event.preventDefault();\n            return true;\n        }\n        return false;\n    },\n    onclick: function onclick(event) {\n        if (event.which === 1) {\n            return removeMkaRcMenu();\n        }\n        return false;\n    }\n};\n\nvar removeMkaRcMenu = function removeMkaRcMenu() {\n    if (document.getElementById(mkarcmenuId)) {\n        document.getElementById(mkarcmenuId).remove();\n        return true;\n    }\n    return false;\n};\n\nvar bindContextMenu = function bindContextMenu() {\n\n    // On désactive le click droit sur l'élément principal\n    parentFunctions.getContainer().addEventListener('contextmenu', function (event) {\n        event.preventDefault();\n        removeMkaRcMenu();\n        var selectableElement = parentFunctions.getSelectableElement(event.target);\n        if (selectableElement !== null) {\n\n            if (!parentFunctions.elementIsSelected(selectableElement)) {\n                parentFunctions.updateSelection([selectableElement]);\n            }\n\n            var selection = parentFunctions.getSelection();\n\n            var contextMenu = config.rightClick(selection);\n\n            var newMenu = document.createElement('ul');\n\n            Array.from(contextMenu).map(function (item) {\n                var li = document.createElement('li');\n                li.innerHTML = item.title;\n                li.onclick = item.action;\n                newMenu.appendChild(li);\n            });\n\n            var newDiv = document.createElement('div');\n            newDiv.setAttribute('id', mkarcmenuId);\n            newDiv.style.position = 'absolute';\n            newDiv.style.left = event.pageX + 'px';\n            newDiv.style.top = event.pageY + 'px';\n\n            newDiv.appendChild(newMenu);\n\n            parentFunctions.getContainer().appendChild(newDiv);\n        }\n    });\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bindDropEvents = bindDropEvents;\n// let mka = document.getElementById(\"mka\");\nvar parentFunctions = {};\nvar config = {};\nvar defaultConfig = {\n    dropableClass: '.mka-dropzone'\n};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    Object.keys(defaultConfig).map(function (i) {\n        config[i] = config[i] || defaultConfig[i];\n    });\n\n    parentFunctions = publicFunctions;\n\n    var elements = parentFunctions.getSelectablesElements();\n    var droppers = document.querySelectorAll(config.dropableClass);\n\n    //Application du drag event pour chaque element ayant la classe mka-elt\n    Array.from(elements).map(function (elt) {\n        bindDragEvents(elt);\n    });\n\n    //Application du drop event pour chaque element ayant la classe mka-dropzone\n    Array.from(droppers).map(function (elt) {\n        return bindDropEvents(elt);\n    });\n};\n\nvar isDragging = false;\nvar draggableTarget = false;\n\nvar onSelectionUpdate = exports.onSelectionUpdate = function onSelectionUpdate(selection) {\n    Array.from(parentFunctions.getSelectablesElements()).map(function (elt) {\n        elt.draggable = false;\n    });\n    Array.from(selection).map(function (elt) {\n        elt.draggable = true;\n    });\n};\n\nvar mkaEvents = exports.mkaEvents = {\n    onmousedown: function onmousedown(event) {\n        draggableTarget = event.target && parentFunctions.elementIsSelected(event.target);\n        return false;\n    }\n};\n\nvar documentEvents = exports.documentEvents = {\n    onmousemove: function onmousemove() {\n        isDragging = draggableTarget;\n        return isDragging;\n    }\n};\n\nvar bindDragEvents = function bindDragEvents(element) {\n\n    element.addEventListener('dragstart', function (e) {\n        // On recupere les élts sélectionnés\n        var selection = parentFunctions.getSelection();\n\n        // on ajoute une class pour modifier le style de la selection\n        Array.from(selection).map(function (elt) {\n            return elt.classList.add(\"on-drag\");\n        });\n\n        var innerCode = \"\";\n        var wrapper = document.createElement('div');\n        var wrapperSize = selection[0].scrollWidth;\n\n        //On rajoute le code html de chaque éléments dans une variable\n        Array.from(selection).map(function (elt) {\n            innerCode += elt.innerHTML;\n        });\n\n        //On set le innerHTML avec tous les éléments récupérés précedemment\n        wrapper.innerHTML = innerCode;\n        wrapper.id = \"wrapper-drag\";\n        wrapper.style.width = wrapperSize + \"px\";\n\n        //On set la position sur absolute et on sort le wrapper de la page sinon ce dernier s'affiche lors du drag\n        wrapper.style.position = \"absolute\";\n        wrapper.style.top = \"-10000px\";\n\n        wrapper = setWrapperStyle(wrapper);\n\n        document.body.appendChild(wrapper);\n\n        e.dataTransfer.setDragImage(wrapper, 0, 0);\n\n        e.dataTransfer.setData('text/plain', '');\n    });\n\n    element.addEventListener('dragend', function (e) {\n        var selection = parentFunctions.getSelection();\n        // On supprime la div avec l'id wrapper-drag\n        document.getElementById(\"wrapper-drag\").outerHTML = \"\";\n\n        // on retire la class\n        Array.from(selection).map(function (elt) {\n            return elt.classList.remove(\"on-drag\");\n        });\n    });\n};\n\nfunction bindDropEvents(dropper) {\n\n    dropper.addEventListener('dragover', function (e) {\n        //Ajout de la classe pour le hover de la dropzone\n        // Cela permet de voir les zone qui peut recevoir la selection\n        this.classList.add('zone-hover');\n\n        // Il faut absolument laisser le preventDefault pour que le drop sur la zone s'execute\n        e.preventDefault();\n    });\n\n    dropper.addEventListener('dragleave', function () {\n        // On retire la class\n        this.classList.remove('zone-hover');\n    });\n\n    dropper.addEventListener('drop', function (e) {\n\n        // Lorsque l'utilisateur relache la sélection sur la zone dropable \n        // on execute l'action défini par l'utilsateur\n        var selection = parentFunctions.getSelection();\n        config.dropFunction([1, 2]);\n        // Suppression des éléments selectionnés\n        // On recupere les élts sélectionnés\n        parentFunctions.removeElements(selection);\n    });\n}\n\nvar setWrapperStyle = function setWrapperStyle(wrapper) {\n    //On récupère les éléments enfants du wrapper qui servira pour le drag\n    var wrapperChildren = wrapper.children;\n    //On choisit le nombre de pixels qui séparera les éléments en fonction du nombre d'éléments dans la liste\n    var childDistance = wrapperChildren.length > 15 ? 1 : 2;\n\n    wrapper.style.opacity = \"1\";\n\n    // Pour chaque élément du wrapper\n    for (var i = 0; i < wrapperChildren.length; i++) {\n        var child = wrapperChildren[i];\n\n        //Si l'utilisateur a configuré le onDragItemsClass, on applique la classe en question\n        if (config.onDragItemClass) {\n            child.classList.add(config.onDragItemClass);\n        } else {\n            //Sinon on force un style par défaut si l'utilisateur n'a pas configuré le onDragItemsClass\n            child.style.color = \"black\";\n            child.style.backgroundColor = \"white\";\n            child.style.border = \"1px solid grey\";\n            child.style.padding = \"5px\";\n            child.style.textAlign = \"center\";\n            child.style.width = \"100%\";\n\n            // console.log(\"You can use your own class\");\n        }\n\n        // Chaque élément a une position abolute\n        // On multiplie i par un nombre de pixels pour indiquer le décalage et avoir un effet d'empilement\n        child.style.position = \"absolute\";\n        child.style.top = i * childDistance + \"px\";\n        child.style.left = i * childDistance + \"px\";\n\n        //Lorsqu'on parcourt le dernier élément et qu'il y a plus d'un élement\n        if (i === wrapperChildren.length - 1 && wrapperChildren.length > 1) {\n            //On crée une span qui contiendra le nombre d'élements selectionnés\n            var span = document.createElement(\"span\");\n            span.innerHTML = wrapperChildren.length;\n            span.style.height = \"25px\";\n            span.style.width = \"25px\";\n            span.style.lineHeight = \"25px\";\n            span.style.position = \"absolute\";\n            span.style.right = \"-10px\";\n            span.style.top = \"-5px\";\n            span.style.zIndex = \"25\";\n            span.style.borderRadius = \"15px\";\n            span.style.textAlign = \"center\";\n\n            //Si on n'a pas configuré le onDragItemClass alors on applique un style par défaut\n            if (!config.onDragItemClass) {\n                span.style.backgroundColor = \"red\";\n                span.style.color = \"white\";\n            }\n            child.appendChild(span);\n        }\n    }\n\n    return wrapper;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar focusedElementIndex = null;\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar square = {};\nvar isInLasso = false;\nvar canStartLasso = false;\nvar selecting = [];\n\nvar mkaEvents = exports.mkaEvents = {\n    onmousedown: function onmousedown(event) {\n        // On démarre la sélection si on utilise le bouton gauche de la souris\n        if (event.which === 1) {\n            if (!event.shiftKey) {\n                focusedElementIndex = null;\n\n                // zone du click\n                square.downX = event.pageX + 0;\n                square.downY = event.pageY + 0;\n                square.upX = event.pageX + 0;\n                square.upY = event.pageY + 0;\n\n                canStartLasso = true;\n\n                orderCoordinate();\n            } else {\n                var selectableElements = parentFunctions.getSelectablesElements();\n                var selection = parentFunctions.getSelection();\n                var newSelection = [];\n\n                var element = parentFunctions.getSelectableElement(event.target);\n\n                if (element) {\n                    focusedElementIndex = focusedElementIndex || selectableElements.indexOf(selection[0]);\n\n                    if (selection.length > 0) {\n                        var elementIndex = selectableElements.indexOf(element);\n                        var firstIndex = Math.min(focusedElementIndex, elementIndex);\n                        var lastIndex = Math.max(focusedElementIndex, elementIndex);\n                        if (event.ctrlKey) {\n                            Array.from(selection).map(function (elt) {\n                                var eltIndex = selectableElements.indexOf(elt);\n                                if (eltIndex < firstIndex) {\n                                    firstIndex = eltIndex;\n                                }\n                                if (eltIndex > lastIndex) {\n                                    lastIndex = eltIndex;\n                                }\n                            });\n                        }\n\n                        for (var i = firstIndex; i <= lastIndex; i++) {\n                            newSelection.push(selectableElements[i]);\n                        }\n                    } else {\n                        newSelection.push(element);\n                    }\n\n                    parentFunctions.updateSelection(newSelection);\n                }\n            }\n\n            return true;\n        }\n        return false;\n    },\n    ondblclick: function ondblclick() {\n        endLasso();\n        return false;\n    }\n};\n\nvar documentEvents = exports.documentEvents = {\n    onmousemove: function onmousemove(event) {\n        if (canStartLasso) {\n            isInLasso = config.lasso && event.which === 1;\n            if (isInLasso) {\n                if (!event.ctrlKey && !square.isVisble()) {\n                    parentFunctions.updateSelection([]);\n                    focusedElementIndex = null;\n                }\n                refreshLasso(event);\n                return true;\n            } else {\n                endLasso();\n            }\n        }\n        return false;\n    }\n};\n\nvar windowEvents = exports.windowEvents = {\n    onclick: function onclick() {\n        endLasso();\n        return false;\n    },\n    onmousedown: function onmousedown(event) {\n        clearSelecting();\n        if (event.which === 1) {\n            if (!event.shiftKey) {\n                var selectableElt = parentFunctions.getSelectableElement(event.target);\n                if (selectableElt) {\n                    var lastSelection = parentFunctions.getSelection();\n                    var index = lastSelection.indexOf(selectableElt);\n                    var newSelection = [selectableElt];\n\n                    if (event.ctrlKey) {\n                        newSelection = lastSelection;\n                        if (index !== -1) {\n                            newSelection.splice(index, 1);\n                        } else {\n                            newSelection.push(selectableElt);\n                        }\n                    }\n\n                    if (index !== -1) {\n                        Array.from(newSelection).map(function (elt) {\n                            selecting.push(elt);\n                            elt.classList.add(config.eltSelectingClass);\n                        });\n                    } else {\n                        parentFunctions.updateSelection(newSelection);\n                    }\n                } else if (!event.ctrlKey) {\n                    parentFunctions.updateSelection([]);\n                }\n            }\n        }\n    },\n    onmouseup: function onmouseup(event) {\n        if (event.which === 1) {\n            pushSelectingElements();\n        }\n    }\n};\n\nsquare = {\n    downX: null,\n    downY: null,\n    upX: null,\n    upY: null,\n    get: function get() {\n        var squareId = \"selection-square\";\n        var squareElt = document.getElementById(squareId);\n        if (!squareElt) {\n            squareElt = document.createElement(\"div\");\n            squareElt.id = squareId;\n            squareElt.style.position = \"absolute\";\n            squareElt.style.backgroundColor = \"rgba(255,0,0,0.5)\";\n            squareElt.style.border = \"1px solid rgba(255,0,0,0.8)\";\n            squareElt.style.display = \"none\";\n            parentFunctions.getContainer().appendChild(squareElt);\n        }\n        return squareElt;\n    },\n    refresh: function refresh() {\n        var squareElt = square.get();\n        squareElt.style.display = \"block\";\n        squareElt.style.top = square.y1 + \"px\";\n        squareElt.style.left = square.x1 + \"px\";\n\n        squareElt.style.width = square.x2 - square.x1 + \"px\";\n        squareElt.style.height = square.y2 - square.y1 + \"px\";\n    },\n    remove: function remove() {\n        square.get().style.display = \"none\";\n    },\n    isVisble: function isVisble() {\n        return square.get().style.display === \"block\";\n    },\n    isCrossingElt: function isCrossingElt(elt) {\n        return elementIsCrossingZone(elt, square.x1, square.y1, square.x2, square.y2);\n    }\n};\n\nvar refreshLasso = function refreshLasso(event) {\n    square.upX = event.pageX + 0;\n    square.upY = event.pageY + 0;\n\n    orderCoordinate();\n\n    selectLassoItems(event.ctrlKey);\n    square.refresh();\n};\n\nvar endLasso = function endLasso() {\n    square.remove();\n    canStartLasso = false;\n    if (isInLasso) {\n        isInLasso = false;\n        pushSelectingElements();\n    }\n};\n\nvar pushSelectingElements = function pushSelectingElements() {\n    if (selecting.length) {\n        parentFunctions.updateSelection(selecting);\n        clearSelecting();\n    }\n};\n\nvar clearSelecting = function clearSelecting() {\n    Array.from(selecting).map(function (elt) {\n        elt.classList.remove(config.eltSelectingClass);\n    });\n    selecting = [];\n};\n\nvar orderCoordinate = function orderCoordinate() {\n    // we order coordinate to simplify\n    square.x1 = square.downX;\n    square.x2 = square.upX;\n    square.y1 = square.downY;\n    square.y2 = square.upY;\n    // on part vers la gauche\n    if (square.downX > square.upX) {\n        square.x1 = square.upX;\n        square.x2 = square.downX;\n    }\n\n    // on part vers le haut\n    if (square.downY > square.upY) {\n        square.y1 = square.upY;\n        square.y2 = square.downY;\n    }\n};\n\nvar selectLassoItems = function selectLassoItems(ctrlKey) {\n    var mkaElts = parentFunctions.getSelectablesElements();\n\n    selecting = ctrlKey ? parentFunctions.getSelection() : [];\n\n    // on parcourt chaque elt pour savoir s'ils sont dans la zone selectionné\n    Array.from(mkaElts).map(function (elt) {\n        elt.classList.remove(config.eltSelectingClass);\n        if (square.isCrossingElt(elt) && (!ctrlKey || selecting.indexOf(elt) === -1)) {\n            selecting.push(elt);\n            elt.classList.add(config.eltSelectingClass);\n        }\n    });\n};\n\nvar elementIsCrossingZone = function elementIsCrossingZone(elt, x1, y1, x2, y2) {\n    var rect = elt.getBoundingClientRect();\n    var zoneElt = {\n        x1: elt.offsetLeft,\n        x2: elt.offsetLeft + rect.width,\n        y1: elt.offsetTop,\n        y2: elt.offsetTop + rect.height\n    };\n    return zoneElt.x2 > x1 && x2 > zoneElt.x1 && zoneElt.y2 > y1 && y2 > zoneElt.y1;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar copyElts = void 0;\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar windowEvents = exports.windowEvents = {\n    onkeyup: function onkeyup(e) {\n        if (e.which == '67' && e.ctrlKey) {\n            copyElts = parentFunctions.getSelection();\n        } else if (e.which == '86' && e.ctrlKey) {\n            config.pasteFunction(copyElts);\n        }\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar onSelectionUpdate = exports.onSelectionUpdate = function onSelectionUpdate(selection) {\n    // si l'élément HTML mka-count existe\n    if (!!document.getElementById(config.count)) {\n        document.getElementById(config.count).innerHTML = selection.length;\n    }\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar currentFocus = null;\n\nvar windowEvents = exports.windowEvents = {\n    onkeydown: function onkeydown(event) {\n        var code = event.which;\n\n        if (code == 37 || code == 38 || code == 39 || code == 40) {\n            var selectables = parentFunctions.getSelectablesElements();\n            var newSelection = event.shiftKey ? parentFunctions.getSelection() : [];\n            var lastInDom = parentFunctions.getLastSelectedInDom();\n            currentFocus = event.shiftKey && (currentFocus || lastInDom) || null;\n\n            switch (event.which) {\n                case 37: // left\n                case 38:\n                    // up\n                    if (!event.shiftKey) {\n                        var prev = selectables[selectables.indexOf(lastInDom) - 1];\n                        newSelection = prev ? [prev] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n                case 39: // right\n                case 40:\n                    // down\n                    if (!event.shiftKey) {\n                        var next = selectables[selectables.indexOf(lastInDom) + 1];\n                        newSelection = next ? [next] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n\n                default:\n                    return; // exit this handler for other keys\n            }\n\n            event.preventDefault();\n            if (newSelection[0]) {\n                var scrollX = newSelection[0].offsetLeft + newSelection[0].offsetWidth / 2 - (window.scrollX + window.innerWidth / 2);\n                var scrollY = newSelection[0].offsetTop + newSelection[0].offsetHeight / 2 - (window.scrollY + window.innerHeight / 2);\n                window.scrollBy(scrollX, scrollY);\n                parentFunctions.updateSelection(newSelection);\n            }\n            return true;\n        }\n        return false;\n    }\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\nvar windowEvents = exports.windowEvents = {\n    onkeyup: function onkeyup(e) {\n\n        var selection = parentFunctions.getSelection();\n\n        if (e.which == '46' && selection.length > 0) {\n            config.deleteFunction(selection);\n\n            selection.forEach(function (elt) {\n                elt.parentNode.removeChild(elt);\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar parentFunctions = {};\nvar config = {};\nvar isMkaContainerFocused = false;\n\nvar init = exports.init = function init(conf, publicFunctions) {\n    config = conf;\n    parentFunctions = publicFunctions;\n};\n\nvar windowEvents = exports.windowEvents = {\n    onkeydown: function onkeydown(e) {\n\n        if (e.ctrlKey) {\n            var code = e.which;\n\n            if ((code === 65 || code === 97) && isMkaContainerFocused) {\n                var newSelection = parentFunctions.getSelectablesElements();\n\n                parentFunctions.updateSelection(newSelection);\n\n                e.preventDefault();\n            }\n            return true;\n        }\n\n        return false;\n    },\n    onmousedown: function onmousedown(e) {\n        isMkaContainerFocused = parentFunctions.isMkaContainerFocused(e.target);\n    }\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// mka.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a4367daf0e50e8698567","import * as dbClick from './dbClick';\nimport * as rightClick from './rightClick';\nimport * as dndHandler from './DragAndDrop';\nimport * as select from './select';\nimport * as copyPaste from './copyPaste';\nimport * as count from './count';\nimport * as arrows from './arrows';\nimport * as deleteShortcut from './deleteShortcut';\nimport * as selectAllShortcut from './selectAllShortcut';\n\nlet config = {\n    \"eltsSelectable\": [],\n    \"eltSelectedClass\": \"mka-elt-selected\",\n    \"eltSelectingClass\": \"mka-elt-selecting\",\n    \"onDragItemClass\": null,\n    \"dragNdrop\": true,\n    \"rightClick\": false,\n    \"dbClick\": false,\n    \"lasso\": true,\n    \"selectAllShortcut\": true,\n    \"copyPaste\": true,\n    \"arrows\": true,\n    \"deleteShortcut\": true,\n    \"count\": \"\",\n    \"dropFunction\": function (ids) {\n        console.log(ids);\n        console.log(\"Default drop function, think to implement this function\");\n    },\n    \"pasteFunction\": (items) => {\n        console.log(items);\n        console.log(\"Default past function, think to implement this function\");\n    },\n    \"deleteFunction\": function (items) {\n        console.log(items);\n        console.log(\"Default delete function, think to implement this function\");\n    }\n}\n\nconfig.actions = [];\n\nlet selectables = [];\nlet selection = [];\nlet components = [];\n\nHTMLElement.prototype.mkaInit = function (clientConfig) {\n    let mka = this;\n\n    Object.keys(clientConfig).map((i) => {\n        config[i] = clientConfig[i];\n    });\n\n    selectables = [].slice.call(config.eltsSelectable);\n\n    // on désactive la selection de text\n    mka.style.userSelect = \"none\";\n\n    if (!!config.dbClick) {\n        components.push(dbClick);\n    }\n\n    if (!!config.rightClick) {\n        components.push(rightClick);\n    }\n\n    if (config.dragNdrop) {\n        components.push(dndHandler);\n    }\n\n    if(config.selectAllShortcut){\n        components.push(selectAllShortcut);\n    }\n\n    if (config.copyPaste) {\n        components.push(copyPaste);\n    }\n\n    if(config.deleteShortcut) {\n        components.push(deleteShortcut);\n    }\n\n    if (!!config.arrows) {\n        components.push(arrows);\n    }\n    if (!!config.count) {\n        components.push(count);\n    }\n\n    // if(config.deleteShortcut) {\n    //     deleteShortcut.active(config);\n    // }\n\n    components.push(select);\n\n    let publicFunctions = {\n        getContainer: () => {\n            return mka;\n        },\n        elementIsSelected: (elt) => {\n            if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                return true;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && elt.classList.contains(config.eltSelectedClass)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getSelectableElement: (elt) => {\n            if (elt.classList && selectables.indexOf(elt) !== -1) {\n                return elt;\n            }\n            while (elt.parentNode) {\n                elt = elt.parentNode;\n                if (elt.classList && selectables.indexOf(elt) !== -1) {\n                    return elt;\n                }\n            }\n            return null;\n        },\n        getSelectablesElements: () => {\n            return selectables;\n        },\n        getLastSelectedInDom: () => {\n            let last = null;\n            Array.from(selection).map(elt => {\n                if (!last || elt.offsetTop > last.offsetTop || elt.offsetTop === last.offsetTop && elt.offsetLeft > last.offsetLeft) {\n                    last = elt;\n                }\n            });\n            return last;\n        },\n        getSelection: () => {\n            let copy = [];\n            Array.from(selection).map(elt => {\n                copy.push(elt);\n            });\n            return copy;\n        },\n        updateSelection: (newSelection) => {\n            let sameSelection = false;\n            if (selection.length === newSelection.length) {\n                sameSelection = true;\n                Array.from(selection).map(elt => {\n                    if (newSelection.indexOf(elt) === -1) {\n                        sameSelection = false;\n                    }\n                });\n            }\n            if (!sameSelection) {\n                selection = newSelection;\n                Array.from(selectables).map(elt => {\n                    elt.classList.remove(config.eltSelectedClass);\n                });\n                Array.from(selection).map(elt => {\n                    elt.classList.add(config.eltSelectedClass);\n                });\n                Array.from(components).map(component => {\n                    component.onSelectionUpdate && component.onSelectionUpdate(selection);\n                });\n            }\n        },\n        removeElements: (elements) => {\n            Array.from(elements).map(elt => {\n                let index = selectables.indexOf(elt);\n                if (index !== -1) {\n                    selectables.splice(index, 1);\n                }\n                index = selection.indexOf(elt);\n                if (index !== -1) {\n                    selection.splice(index, 1);\n                }\n                elt.parentNode.removeChild(elt);\n            });\n            Array.from(components).map(component => {\n                component.onSelectionUpdate && component.onSelectionUpdate(selection);\n            });\n        },\n        isMkaContainerFocused: (target) => {\n            if (target === mka) {\n                return true;\n            }\n\n            while (target.parentNode) {\n                target = target.parentNode;\n\n                if (target === mka) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    };\n\n    Array.from(components).map(component => {\n        component.init && component.init(config, publicFunctions);\n    });\n\n    let bindComponentsEvents = (target, eventName) => {\n        target.value[eventName] = (event) => {\n            let stop = false;\n            Array.from(components).map(component => {\n                if (!stop) {\n                    stop = component[target.name] && component[target.name][eventName] && component[target.name][eventName](event) || false;\n                }\n            });\n        }\n    }\n\n    let mouseEventsList = [\"onmousedown\", \"onmousemove\", \"onmouseup\", \"onclick\", \"ondblclick\"];\n    let mouseEventsTargets = [\n        {name: \"windowEvents\", value: window},\n        {name: \"documentEvents\", value: document.body},\n        {name: \"mkaEvents\", value: mka}\n    ];\n\n    let keyEventsList = [\"onkeydown\", \"onkeypress\", \"onkeyup\"];\n\n    Array.from(mouseEventsTargets).map(mouseEventTarget => {\n        Array.from(mouseEventsList).map(mouseEventName => {\n            bindComponentsEvents(mouseEventTarget, mouseEventName);\n        });\n    });\n\n    Array.from(keyEventsList).map(keyEventName => {\n        bindComponentsEvents({name: \"windowEvents\", value: window}, keyEventName);\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nexport let mkaEvents = {\n    ondblclick: (e) => {\n        let element = parentFunctions.getSelectableElement(e.target);\n        if (!!element && typeof config.dbClick === 'function') {\n            parentFunctions.updateSelection([element]);\n            config.dbClick(element);\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/dbClick.js","let parentFunctions = {};\nlet config = {};\nconst mkarcmenuId = 'mkarcmenu';\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n\n    bindContextMenu();\n}\n\nexport let windowEvents = {\n    onkeydown: (event) => {\n        let code = event.which;\n        if ((code == 37 || code == 38 || code == 39 || code == 40) && !!document.getElementById(mkarcmenuId)) {\n            event.preventDefault();\n            return true;\n        }\n        return false;\n    },\n    onclick: (event) => {\n        if (event.which === 1) {\n            return removeMkaRcMenu();\n        }\n        return false;\n    }\n}\n\nlet removeMkaRcMenu = () => {\n    if (document.getElementById(mkarcmenuId)) {\n        document.getElementById(mkarcmenuId).remove();\n        return true;\n    }\n    return false;\n}\n\nlet bindContextMenu = () => {\n\n    // On désactive le click droit sur l'élément principal\n    parentFunctions.getContainer().addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        removeMkaRcMenu();\n        const selectableElement = parentFunctions.getSelectableElement(event.target);\n        if (selectableElement !== null) {\n\n            if (!parentFunctions.elementIsSelected(selectableElement)) {\n                parentFunctions.updateSelection([selectableElement]);\n            }\n\n            let selection = parentFunctions.getSelection();\n\n            let contextMenu = config.rightClick(selection);\n\n            let newMenu = document.createElement('ul');\n\n            Array.from(contextMenu).map(item => {\n                let li = document.createElement('li');\n                li.innerHTML = item.title;\n                li.onclick = item.action;\n                newMenu.appendChild(li);\n            });\n\n\n            const newDiv = document.createElement('div');\n            newDiv.setAttribute('id', mkarcmenuId);\n            newDiv.style.position = 'absolute';\n            newDiv.style.left = event.pageX + 'px';\n            newDiv.style.top = event.pageY + 'px';\n\n            newDiv.appendChild(newMenu);\n\n            parentFunctions.getContainer().appendChild(newDiv);\n\n        }\n    });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/rightClick.js","// let mka = document.getElementById(\"mka\");\nlet parentFunctions = {};\nlet config = {};\nlet defaultConfig = {\n    dropableClass: '.mka-dropzone'\n};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    Object.keys(defaultConfig).map((i) => {\n        config[i] = config[i] || defaultConfig[i];\n    });\n\n    parentFunctions = publicFunctions;\n\n    let elements = parentFunctions.getSelectablesElements();\n    let droppers = document.querySelectorAll(config.dropableClass);\n\n    //Application du drag event pour chaque element ayant la classe mka-elt\n    Array.from(elements).map(elt => {\n        bindDragEvents(elt);\n    });\n\n    //Application du drop event pour chaque element ayant la classe mka-dropzone\n    Array.from(droppers).map(elt => bindDropEvents(elt));\n}\n\nlet isDragging = false;\nlet draggableTarget = false;\n\nexport let onSelectionUpdate = (selection) => {\n    Array.from(parentFunctions.getSelectablesElements()).map(elt => {\n        elt.draggable = false;\n    });\n    Array.from(selection).map(elt => {\n        elt.draggable = true;\n    });\n};\n\nexport let mkaEvents = {\n    onmousedown: (event) => {\n        draggableTarget = event.target && parentFunctions.elementIsSelected(event.target);\n        return false;\n    }\n};\n\nexport let documentEvents = {\n    onmousemove: () => {\n        isDragging = draggableTarget;\n        return isDragging;\n    }\n};\n\nlet bindDragEvents = (element) => {\n\n    element.addEventListener('dragstart', function (e) {\n        // On recupere les élts sélectionnés\n        let selection = parentFunctions.getSelection();\n\n        // on ajoute une class pour modifier le style de la selection\n        Array.from(selection).map((elt) => elt.classList.add(\"on-drag\"));\n\n        let innerCode = \"\";\n        let wrapper = document.createElement('div');\n        const wrapperSize = selection[0].scrollWidth;\n\n        //On rajoute le code html de chaque éléments dans une variable\n        Array.from(selection).map((elt) => {\n            innerCode += elt.innerHTML;\n        });\n\n        //On set le innerHTML avec tous les éléments récupérés précedemment\n        wrapper.innerHTML = innerCode;\n        wrapper.id = \"wrapper-drag\";\n        wrapper.style.width = wrapperSize + \"px\";\n\n        //On set la position sur absolute et on sort le wrapper de la page sinon ce dernier s'affiche lors du drag\n        wrapper.style.position = \"absolute\";\n        wrapper.style.top = \"-10000px\";\n\n        wrapper = setWrapperStyle(wrapper);\n\n        document.body.appendChild(wrapper);\n\n        e.dataTransfer.setDragImage(wrapper, 0, 0);\n\n        e.dataTransfer.setData('text/plain', '');\n\n    });\n\n    element.addEventListener('dragend', function (e) {\n        let selection = parentFunctions.getSelection();\n        // On supprime la div avec l'id wrapper-drag\n        document.getElementById(\"wrapper-drag\").outerHTML = \"\";\n\n        // on retire la class\n        Array.from(selection).map((elt) => elt.classList.remove(\"on-drag\"));\n    });\n}\n\nexport function bindDropEvents(dropper) {\n\n    dropper.addEventListener('dragover', function (e) {\n        //Ajout de la classe pour le hover de la dropzone\n        // Cela permet de voir les zone qui peut recevoir la selection\n        this.classList.add('zone-hover');\n\n        // Il faut absolument laisser le preventDefault pour que le drop sur la zone s'execute\n        e.preventDefault();\n    });\n\n    dropper.addEventListener('dragleave', function () {\n        // On retire la class\n        this.classList.remove('zone-hover');\n    });\n\n    dropper.addEventListener('drop', function (e) {\n\n        // Lorsque l'utilisateur relache la sélection sur la zone dropable \n        // on execute l'action défini par l'utilsateur\n        let selection = parentFunctions.getSelection();\n        config.dropFunction([1, 2]);\n        // Suppression des éléments selectionnés\n        // On recupere les élts sélectionnés\n        parentFunctions.removeElements(selection);\n\n    });\n}\n\n\nlet setWrapperStyle = (wrapper) => {\n    //On récupère les éléments enfants du wrapper qui servira pour le drag\n    let wrapperChildren = wrapper.children;\n    //On choisit le nombre de pixels qui séparera les éléments en fonction du nombre d'éléments dans la liste\n    let childDistance = wrapperChildren.length > 15 ? 1 : 2;\n\n    wrapper.style.opacity = \"1\";\n\n    // Pour chaque élément du wrapper\n    for (let i = 0; i < wrapperChildren.length; i++) {\n        let child = wrapperChildren[i];\n\n        //Si l'utilisateur a configuré le onDragItemsClass, on applique la classe en question\n        if (config.onDragItemClass) {\n            child.classList.add(config.onDragItemClass);\n        } else {\n            //Sinon on force un style par défaut si l'utilisateur n'a pas configuré le onDragItemsClass\n            child.style.color = \"black\";\n            child.style.backgroundColor = \"white\";\n            child.style.border = \"1px solid grey\";\n            child.style.padding = \"5px\";\n            child.style.textAlign = \"center\";\n            child.style.width = \"100%\";\n\n\n            // console.log(\"You can use your own class\");\n        }\n\n\n        // Chaque élément a une position abolute\n        // On multiplie i par un nombre de pixels pour indiquer le décalage et avoir un effet d'empilement\n        child.style.position = \"absolute\";\n        child.style.top = (i * childDistance) + \"px\";\n        child.style.left = (i * childDistance) + \"px\";\n\n        //Lorsqu'on parcourt le dernier élément et qu'il y a plus d'un élement\n        if (i === wrapperChildren.length - 1 && wrapperChildren.length > 1) {\n            //On crée une span qui contiendra le nombre d'élements selectionnés\n            let span = document.createElement(\"span\");\n            span.innerHTML = wrapperChildren.length;\n            span.style.height = \"25px\";\n            span.style.width = \"25px\";\n            span.style.lineHeight = \"25px\";\n            span.style.position = \"absolute\";\n            span.style.right = \"-10px\";\n            span.style.top = \"-5px\";\n            span.style.zIndex = \"25\";\n            span.style.borderRadius = \"15px\";\n            span.style.textAlign = \"center\";\n\n            //Si on n'a pas configuré le onDragItemClass alors on applique un style par défaut\n            if (!config.onDragItemClass) {\n                span.style.backgroundColor = \"red\";\n                span.style.color = \"white\";\n            }\n            child.appendChild(span);\n        }\n    }\n\n    return wrapper;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/DragAndDrop.js","let parentFunctions = {};\nlet config = {};\nlet focusedElementIndex = null;\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nlet square = {};\nlet isInLasso = false;\nlet canStartLasso = false;\nlet selecting = [];\n\n\nexport let mkaEvents = {\n        onmousedown: (event) => {\n            // On démarre la sélection si on utilise le bouton gauche de la souris\n            if (event.which === 1) {\n                if (!event.shiftKey) {\n                    focusedElementIndex = null;\n\n                    // zone du click\n                    square.downX = event.pageX + 0;\n                    square.downY = event.pageY + 0;\n                    square.upX = event.pageX + 0;\n                    square.upY = event.pageY + 0;\n\n                    canStartLasso = true;\n\n                    orderCoordinate();\n                } else {\n                    let selectableElements = parentFunctions.getSelectablesElements();\n                    let selection = parentFunctions.getSelection();\n                    let newSelection = [];\n\n                    let element = parentFunctions.getSelectableElement(event.target);\n\n                    if (element) {\n                        focusedElementIndex = focusedElementIndex || selectableElements.indexOf(selection[0]);\n\n                        if (selection.length > 0) {\n                            let elementIndex = selectableElements.indexOf(element);\n                            let firstIndex = Math.min(focusedElementIndex,elementIndex);\n                            let lastIndex = Math.max(focusedElementIndex,elementIndex);\n                            if(event.ctrlKey) {\n                                Array.from(selection).map(elt => {\n                                    let eltIndex = selectableElements.indexOf(elt);\n                                    if(eltIndex < firstIndex) {\n                                        firstIndex = eltIndex;\n                                    }\n                                    if(eltIndex > lastIndex) {\n                                        lastIndex = eltIndex;\n                                    }\n                                });\n                            }\n\n                            for (let i = firstIndex; i <= lastIndex; i++) {\n                                    newSelection.push(selectableElements[i]);\n                            }\n                        } else {\n                            newSelection.push(element);\n                        }\n\n                        parentFunctions.updateSelection(newSelection);\n                    }\n                }\n\n                return true;\n            }\n            return false;\n        },\n        ondblclick: () => {\n            endLasso();\n            return false;\n        }\n    }\n    ;\n\nexport let documentEvents = {\n    onmousemove: (event) => {\n        if (canStartLasso) {\n            isInLasso = config.lasso && event.which === 1;\n            if (isInLasso) {\n                if (!event.ctrlKey && !square.isVisble()) {\n                    parentFunctions.updateSelection([]);\n                    focusedElementIndex = null;\n                }\n                refreshLasso(event);\n                return true;\n            } else {\n                endLasso();\n            }\n        }\n        return false;\n    }\n};\n\nexport let windowEvents = {\n    onclick: () => {\n        endLasso();\n        return false;\n    },\n    onmousedown: (event) => {\n        clearSelecting();\n        if (event.which === 1) {\n            if (!event.shiftKey) {\n                let selectableElt = parentFunctions.getSelectableElement(event.target);\n                if (selectableElt) {\n                    let lastSelection = parentFunctions.getSelection();\n                    let index = lastSelection.indexOf(selectableElt);\n                    let newSelection = [selectableElt];\n\n                    if (event.ctrlKey) {\n                        newSelection = lastSelection;\n                        if (index !== -1) {\n                            newSelection.splice(index, 1);\n                        } else {\n                            newSelection.push(selectableElt);\n                        }\n                    }\n\n                    if (index !== -1) {\n                        Array.from(newSelection).map(elt => {\n                            selecting.push(elt);\n                            elt.classList.add(config.eltSelectingClass);\n                        });\n                    } else {\n                        parentFunctions.updateSelection(newSelection);\n                    }\n\n                } else if (!event.ctrlKey) {\n                    parentFunctions.updateSelection([]);\n                }\n            }\n        }\n    },\n    onmouseup: (event) => {\n        if (event.which === 1) {\n            pushSelectingElements();\n        }\n    }\n};\n\nsquare = {\n    downX: null,\n    downY: null,\n    upX: null,\n    upY: null,\n    get: () => {\n        let squareId = \"selection-square\";\n        let squareElt = document.getElementById(squareId);\n        if (!squareElt) {\n            squareElt = document.createElement(\"div\");\n            squareElt.id = squareId;\n            squareElt.style.position = \"absolute\";\n            squareElt.style.backgroundColor = \"rgba(255,0,0,0.5)\";\n            squareElt.style.border = \"1px solid rgba(255,0,0,0.8)\";\n            squareElt.style.display = \"none\";\n            parentFunctions.getContainer().appendChild(squareElt);\n        }\n        return squareElt;\n    },\n    refresh: () => {\n        let squareElt = square.get();\n        squareElt.style.display = \"block\";\n        squareElt.style.top = square.y1 + \"px\";\n        squareElt.style.left = square.x1 + \"px\";\n\n        squareElt.style.width = (square.x2 - square.x1) + \"px\";\n        squareElt.style.height = (square.y2 - square.y1) + \"px\";\n    },\n    remove: () => {\n        square.get().style.display = \"none\";\n    },\n    isVisble: () => {\n        return square.get().style.display === \"block\";\n    },\n    isCrossingElt: (elt) => {\n        return elementIsCrossingZone(elt, square.x1, square.y1, square.x2, square.y2);\n    }\n};\n\nlet refreshLasso = (event) => {\n    square.upX = event.pageX + 0;\n    square.upY = event.pageY + 0;\n\n    orderCoordinate();\n\n    selectLassoItems(event.ctrlKey);\n    square.refresh();\n\n};\n\nlet endLasso = () => {\n    square.remove();\n    canStartLasso = false;\n    if (isInLasso) {\n        isInLasso = false;\n        pushSelectingElements();\n    }\n}\n\nlet pushSelectingElements = () => {\n    if (selecting.length) {\n        parentFunctions.updateSelection(selecting);\n        clearSelecting();\n    }\n}\n\nlet clearSelecting = () => {\n    Array.from(selecting).map(elt => {\n        elt.classList.remove(config.eltSelectingClass);\n    });\n    selecting = [];\n}\n\nlet orderCoordinate = () => {\n    // we order coordinate to simplify\n    square.x1 = square.downX;\n    square.x2 = square.upX;\n    square.y1 = square.downY;\n    square.y2 = square.upY;\n    // on part vers la gauche\n    if (square.downX > square.upX) {\n        square.x1 = square.upX;\n        square.x2 = square.downX;\n    }\n\n    // on part vers le haut\n    if (square.downY > square.upY) {\n        square.y1 = square.upY;\n        square.y2 = square.downY;\n    }\n}\n\nlet selectLassoItems = (ctrlKey) => {\n    let mkaElts = parentFunctions.getSelectablesElements();\n\n    selecting = (ctrlKey) ? parentFunctions.getSelection() : [];\n\n    // on parcourt chaque elt pour savoir s'ils sont dans la zone selectionné\n    Array.from(mkaElts).map(elt => {\n        elt.classList.remove(config.eltSelectingClass);\n        if (square.isCrossingElt(elt) && (!ctrlKey || selecting.indexOf(elt) === -1)) {\n            selecting.push(elt);\n            elt.classList.add(config.eltSelectingClass);\n        }\n    });\n}\n\nlet elementIsCrossingZone = (elt, x1, y1, x2, y2) => {\n    let rect = elt.getBoundingClientRect();\n    let zoneElt = {\n        x1: elt.offsetLeft,\n        x2: (elt.offsetLeft + rect.width),\n        y1: elt.offsetTop,\n        y2: (elt.offsetTop + rect.height)\n    };\n    return zoneElt.x2 > x1 && x2 > zoneElt.x1 && zoneElt.y2 > y1 && y2 > zoneElt.y1;\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/select.js","let parentFunctions = {};\nlet config = {};\nlet copyElts;\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nexport let windowEvents = {\n    onkeyup: (e) => {\n        if(e.which == '67' && e.ctrlKey) {\n            copyElts = parentFunctions.getSelection();\n        } else if (e.which == '86' && e.ctrlKey) {\n            config.pasteFunction(copyElts);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/copyPaste.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nexport let onSelectionUpdate = (selection) => {\n// si l'élément HTML mka-count existe\n    if (!!document.getElementById(config.count)) {\n        document.getElementById(config.count).innerHTML = selection.length;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/count.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nlet currentFocus = null;\n\nexport let windowEvents = {\n    onkeydown: (event) => {\n        let code = event.which;\n\n        if (code == 37 || code == 38 || code == 39 || code == 40) {\n            let selectables = parentFunctions.getSelectablesElements();\n            let newSelection = (event.shiftKey) ? parentFunctions.getSelection() : [];\n            let lastInDom = parentFunctions.getLastSelectedInDom();\n            currentFocus = event.shiftKey && (currentFocus || lastInDom) || null;\n\n\n            switch (event.which) {\n                case 37: // left\n                case 38: // up\n                    if (!event.shiftKey) {\n                        let prev = selectables[selectables.indexOf(lastInDom) - 1];\n                        newSelection = (prev) ? [prev] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n                case 39: // right\n                case 40: // down\n                    if (!event.shiftKey) {\n                        let next = selectables[selectables.indexOf(lastInDom) + 1];\n                        newSelection = (next) ? [next] : [lastInDom];\n                    } else {\n                        //TODO\n                    }\n                    break;\n\n                default:\n                    return; // exit this handler for other keys\n            }\n\n            event.preventDefault();\n            if (newSelection[0]) {\n                let scrollX = (newSelection[0].offsetLeft + newSelection[0].offsetWidth / 2) - (window.scrollX + window.innerWidth / 2);\n                let scrollY = (newSelection[0].offsetTop + newSelection[0].offsetHeight / 2) - (window.scrollY + window.innerHeight / 2);\n                window.scrollBy(scrollX, scrollY);\n                parentFunctions.updateSelection(newSelection);\n            }\n            return true;\n        }\n        return false;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/arrows.js","let parentFunctions = {};\nlet config = {};\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\nexport let windowEvents = {\n    onkeyup: (e) => {\n\n        let selection = parentFunctions.getSelection();\n\n        if(e.which == '46' && selection.length > 0) {\n            config.deleteFunction(selection);\n\n            selection.forEach(function (elt) {\n               elt.parentNode.removeChild(elt);\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/deleteShortcut.js","let parentFunctions = {};\nlet config = {};\nlet isMkaContainerFocused = false;\n\nexport let init = (conf, publicFunctions) => {\n    config = conf;\n    parentFunctions = publicFunctions;\n}\n\nexport let windowEvents = {\n    onkeydown : (e) => {\n\n        if(e.ctrlKey) {\n            let code = e.which;\n\n            if((code === 65 || code === 97) && isMkaContainerFocused) {\n                let newSelection = parentFunctions.getSelectablesElements();\n\n                parentFunctions.updateSelection(newSelection);\n\n                e.preventDefault();\n            }\n            return true;\n        }\n\n        return false;\n    },\n    onmousedown : (e) => {\n        isMkaContainerFocused = parentFunctions.isMkaContainerFocused(e.target);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/selectAllShortcut.js"],"sourceRoot":""}